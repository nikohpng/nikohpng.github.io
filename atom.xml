<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hpng</title>
  
  
  <link href="http://nikohpng.github.io/atom.xml" rel="self"/>
  
  <link href="http://nikohpng.github.io/"/>
  <updated>2023-04-27T12:48:29.861Z</updated>
  <id>http://nikohpng.github.io/</id>
  
  <author>
    <name>hpng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FreeSWITCH问题分析</title>
    <link href="http://nikohpng.github.io/2023/04/27/freeswitch/FreeSWITCH%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    <id>http://nikohpng.github.io/2023/04/27/freeswitch/FreeSWITCH%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</id>
    <published>2023-04-27T12:47:49.000Z</published>
    <updated>2023-04-27T12:48:29.861Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要讲解在实际运维过程中容易出现的问题现象以及导致其出现问题的根本原因，可能附带有解决方法</p><h2 id="30s挂断"><a href="#30s挂断" class="headerlink" title="30s挂断"></a>30s挂断</h2><p>呼叫通没问题，但是会出现 30s 挂断。一般原因有以下几个方面：</p><ul><li>外网端口与内网端口没有一对一映射：端口错误，导致客户端与 FS 的沟通出现网络无法连接问题，可能是 ACK 问题。<ul><li>解决方案：将接口一对一映射</li></ul></li></ul><h2 id="FS与opensip使用tls对接时，2分钟-tcp-断连"><a href="#FS与opensip使用tls对接时，2分钟-tcp-断连" class="headerlink" title="FS与opensip使用tls对接时，2分钟 tcp 断连"></a>FS与opensip使用tls对接时，2分钟 tcp 断连</h2><p>opensips 本身有个参数 <code>tcp_connection_lifetime</code> 用于控制 tcp 的存活时长，此存活时长只能通过与服务端发送数据来延长时间，无法通过 tcp 本身的 <code>keepalive</code> 来进行保活。</p><p>最后，必须通过 fs 端发送 option 来延长 tcp 的存活时间。<br>想要实现在通话中发送 option，那么必须使用 gateway ，并在 gateway 中配置 <code>ping</code> 来发送 option。</p><p>其中，option 存在问题还没开始通话就有 option 进行发送，其中的端口与通话的端口有什么关系呢？根据抓包发现：当前没通话，有新的呼叫创建情况下，有option，那就直接用option的端口。因而网关的option没通话时的option与新来通话后的option是同一个端口。</p><blockquote><p>注意：目前仅仅测试通过了 fs 作为 fresher 进行刷新保活，服务器作为 refresher 时，其 update 无法发送到 fs</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FreeSWTICH" scheme="http://nikohpng.github.io/categories/FreeSWTICH/"/>
    
    
    <category term="Question" scheme="http://nikohpng.github.io/tags/Question/"/>
    
  </entry>
  
  <entry>
    <title>WebRTC问题分析内容</title>
    <link href="http://nikohpng.github.io/2023/04/25/webrtc/WebRTC%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E5%86%85%E5%AE%B9/"/>
    <id>http://nikohpng.github.io/2023/04/25/webrtc/WebRTC%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E5%86%85%E5%AE%B9/</id>
    <published>2023-04-25T12:41:53.000Z</published>
    <updated>2023-04-25T12:50:37.819Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>WebRTC 的问题分析分析主要记录一些使用 WebRTC 过程中出现的问题，并且当前没有成体系的内容用于总结，简单的零散分析</p><h2 id="WebRTC-的-oncandidate-时候失败，导致-setLocalDescription-耗时增加"><a href="#WebRTC-的-oncandidate-时候失败，导致-setLocalDescription-耗时增加" class="headerlink" title="WebRTC 的 oncandidate 时候失败，导致 setLocalDescription 耗时增加"></a>WebRTC 的 oncandidate 时候失败，导致 setLocalDescription 耗时增加</h2><ul><li>问题：如标题所诉，由于在收集本地网络环境的，一些网卡（虚拟网卡等）的 ip，不具有连接网络的能力，导致在收集 IP 的时候会出现失败。</li><li>解决方案：监听来自 oncandidate 的事件，检测到有 relay 或 srly 的就可以直接调用 complete  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session.on(<span class="string">&quot;icecandidate&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event.candidate.type === <span class="string">&quot;srflx&quot;</span> &amp;&amp;</span><br><span class="line">        event.candidate.relatedAddress !== <span class="literal">null</span> &amp;&amp;</span><br><span class="line">        event.candidate.relatedPort !== <span class="literal">null</span>) &#123;</span><br><span class="line">        event.ready();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>查看错误：通过 <code>chrome://webrtc-internals</code> 即可查看 ice 收集失败的时候，对应的 ip 是多少</li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><a href="https://stackoverflow.com/questions/61253322/a-40-sec-delay-of-sip-call-initiation-using-jssip-webrtc">A 40 sec delay of SIP call initiation using JSSIP / WebRTC</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WebRTC" scheme="http://nikohpng.github.io/categories/WebRTC/"/>
    
    
    <category term="Question" scheme="http://nikohpng.github.io/tags/Question/"/>
    
  </entry>
  
  <entry>
    <title>WebRTC源码中文件的作用</title>
    <link href="http://nikohpng.github.io/2023/03/30/webrtc/WebRTC%E6%BA%90%E7%A0%81%E4%B8%AD%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <id>http://nikohpng.github.io/2023/03/30/webrtc/WebRTC%E6%BA%90%E7%A0%81%E4%B8%AD%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8/</id>
    <published>2023-03-30T13:03:54.000Z</published>
    <updated>2023-03-30T13:09:29.983Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要讲解在 WebRTC 中一些文件的作用，并且其用途在编译过程中的一些用途。当然这些文件主要是一些配置文件，不包括源码文件</p><h2 id="src-中源码"><a href="#src-中源码" class="headerlink" title="src 中源码"></a>src 中源码</h2><ul><li><code>BUILD.gn</code>：本文件主要包含了各种需要编译的各种源码，其中配置了编译 SDK 时，需要编译的源码。</li><li><code>DEPS</code>：主要包含的是一些依赖文件，例如：openh264、ffmpeg等这类依赖文件</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WebRTC" scheme="http://nikohpng.github.io/categories/WebRTC/"/>
    
    
    <category term="Source" scheme="http://nikohpng.github.io/tags/Source/"/>
    
  </entry>
  
  <entry>
    <title>WebRTC在Mac中的编译</title>
    <link href="http://nikohpng.github.io/2023/03/30/webrtc/WebRTC%E5%9C%A8Mac%E4%B8%AD%E7%9A%84%E7%BC%96%E8%AF%91/"/>
    <id>http://nikohpng.github.io/2023/03/30/webrtc/WebRTC%E5%9C%A8Mac%E4%B8%AD%E7%9A%84%E7%BC%96%E8%AF%91/</id>
    <published>2023-03-30T12:26:21.000Z</published>
    <updated>2023-03-30T12:27:21.197Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="webrtc-在-mac-编译-Mac-与-IOS"><a href="#webrtc-在-mac-编译-Mac-与-IOS" class="headerlink" title="webrtc 在 mac 编译 Mac 与 IOS"></a>webrtc 在 mac 编译 Mac 与 IOS</h1><p>本文将会讲解在 mac 中从拉取代码到打包成 xcframework 的所有步骤，包中包括了ios 与 mac 的所有包。</p><h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><p>编译 WebRTC 全程需要代理软件，所以建议设置好代理软件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export http_porxy&#x3D;&quot;http:&#x2F;&#x2F;127.0.0.1:21087&quot;</span><br><span class="line">export https_porxy&#x3D;&quot;https:&#x2F;&#x2F;127.0.0.1:21087&quot;</span><br></pre></td></tr></table></figure><blockquote><p>注意：即使在 MAC 中开启全局代理，仍然需要设置代理。本人编译时，没配置这个有时候出现无法下载外网资源，即使开了全局代理也没用。</p></blockquote><h2 id="安装-depot-tools"><a href="#安装-depot-tools" class="headerlink" title="安装 depot_tools"></a>安装 depot_tools</h2><p>depot_tools 是一套 Google 用来编译 WebRTC 的构建工具，获取 depot_tools 前，请先开启 VPN。</p><p>下载 <a href="https://storage.googleapis.com/chrome-infra/depot_tools.zip">depot_tools</a> 解压到某个目录，然后配置系统环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PWD/depot_tools:$PATH</span><br></pre></td></tr></table></figure><h2 id="获取源代码"><a href="#获取源代码" class="headerlink" title="获取源代码"></a>获取源代码</h2><p>获取源代码<strong>不能使用官网的源代码</strong>，必须到 <a href="https://github.com/webrtc-sdk/webrtc">webrtc-sdk</a> 中获取专门为 <a href="https://github.com/flutter-webrtc/flutter-webrtc">flutter-webrtc</a>修改过的源码。<br>获取源码步骤如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir webrtc</span><br><span class="line">cd webrtc</span><br><span class="line">touch .gclient</span><br><span class="line">echo &quot;solutions = [</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;name&quot;: &quot;src&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;https://github.com/webrtc-sdk/webrtc.git&quot;,</span><br><span class="line">    &quot;deps_file&quot;: &quot;DEPS&quot;,</span><br><span class="line">    &quot;managed&quot;: False,</span><br><span class="line">    &quot;custom_deps&quot;: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line">target_os = [&#x27;ios&#x27;]&quot; &gt; .gclient</span><br><span class="line">sudo gclient sync</span><br></pre></td></tr></table></figure><h2 id="生成示例代码"><a href="#生成示例代码" class="headerlink" title="生成示例代码"></a>生成示例代码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/ios --args=&#x27;target_os=&quot;ios&quot; target_cpu=&quot;arm64&quot; is_component_build=false&#x27; --ide=xcode </span><br></pre></td></tr></table></figure><h2 id="替换本地编译-Frameworks"><a href="#替换本地编译-Frameworks" class="headerlink" title="替换本地编译 Frameworks"></a>替换本地编译 Frameworks</h2><p>在  flutter-webrtc 的 IOS 目录下面创建  Frameworks 目录，然后修改 podfile 如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># s.dependency &#39;WebRTC-SDK&#39;, &#39;104.5112.02&#39;</span><br><span class="line">  s.ios.vendored_frameworks &#x3D; &#39;Frameworks&#x2F;WebRTC.xcframework&#39;</span><br><span class="line">  s.vendored_frameworks &#x3D; &#39;WebRTC.xcframework&#39;</span><br></pre></td></tr></table></figure><h2 id="异常问题"><a href="#异常问题" class="headerlink" title="异常问题"></a>异常问题</h2><p>在拉取源代码的时候、获取依赖或者编译时可能出现各种奇奇怪怪的问题，下面会对一些奇怪问题进行解释与给出解决方法。</p><ul><li><p>:fatal: early EOF fatal: index-pack failed</p><ul><li>原因：此问题说拉取代码时，容量不够</li><li>解决方法：未知原因导致其存储在缓存空间，只要使用 sudo 权限去执行 gclient sync 即可解决问题</li></ul></li><li><p>下载某个资源时出现 ssl 验证错误。好像是更新 gclient 的时候。</p><ul><li>原因：由于我们挂了代理，不知什么原因导致了 ssl 验证失败</li><li>解决方法：需要 python 安装一个如下所示的内容，建议直接全局搜索 <code>Certificates.command</code> 这个文件所在位置  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">where python3</span><br><span class="line">sudo python3 install Certificates.command</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Failed to fetch file gs://chromiumxxxx</p><ul><li>原因：不知道啥原因，反正没法下载，只能自己手动下载了</li><li>解决方法：将其中的 <code>gs://</code> 替换为 <code>https://storage.googleapis.com/</code> 直接下载，然后将其改名为具体文件，放到指定位置下面就行。</li><li>补充：MAC 这边一共有 <code>clang</code>、<code>clang-format</code>、<code>test-fonts.tar.gz</code> 这几个文件没法下载，手动下载即可。其中 <code>test-fonts.tar.gz</code> 下载下来会是个<code>**.tar</code> 文件，只需要改成 <code>test-fonts.tar</code> 放入指定文件夹即可。</li></ul></li><li><p>error at <code>xtest_module_target=&quot;//test:google_test_runner_objc&quot;</code></p><ul><li>原因：目前不知道原因</li><li>解决方法：直接去对应位置注释掉这行依赖，仍然可以使用</li></ul></li><li><p>cpid更新失败代理新的配置方案</p><ul><li>原因：配置了 https 代理的情况下，会对 ssl 进行验证，而由于我们开了代理，这个验证基本会失败</li><li>解决方法：将 https 代理设置成 http 代理就不会出现问题了。<code>export https_porxy=&quot;http://127.0.0.1:21087&quot;</code></li></ul></li><li><p>可能碰到编译错误——fatal error: ‘libavutil/avconfig.h’ file not found:</p><ul><li>原因：目前不知道原因</li><li>解决方法：在 src/third_party/ffmpeg/libavutil/avconfig.h 中创建此文件，并填入如下内容：  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Generated by ffconf */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> AVUTIL_AVCONFIG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AVUTIL_AVCONFIG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_HAVE_BIGENDIAN 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_HAVE_FAST_UNALIGNED 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* AVUTIL_AVCONFIG_H */</span></span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://blog.csdn.net/anyRTC/article/details/121225296">IOS技术分享| WebRTC iOS源码下载&amp;编译</a><br><a href="https://juejin.cn/post/7119027229824122888">记录一次WebRTC iOS的源码编译过程</a><br><a href="https://www.cnblogs.com/elesos/p/9914766.html">在windows上编译chrome浏览器Building Chromium for Windows</a><br><a href="https://blog.csdn.net/xzy565143480/article/details/103194085">MacOS Python3.7 出现SSL: CERTIFICATE_VERIFY_FAILED报错解决方案</a><br><a href="https://hackmd.io/@eDUv2-UvT0mEwZSnPiH3Rg/ByYCr2_sL">Build WebRTC library for iOS</a><br><a href="http://myblog.emhct.net.cn/index.php/archives/2016">【webrtc、gclient】cpid更新失败代理新的配置方案</a><br><a href="https://blog.csdn.net/m0_37671478/article/details/100567535">Flutter插件开发，ios添加本地第三方framework</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WebRTC" scheme="http://nikohpng.github.io/categories/WebRTC/"/>
    
    
    <category term="WebRTC编译" scheme="http://nikohpng.github.io/tags/WebRTC%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>WebRTC在ubuntu中编译android</title>
    <link href="http://nikohpng.github.io/2023/03/30/webrtc/WebRTC%E5%9C%A8ubuntu%E4%B8%AD%E7%BC%96%E8%AF%91android/"/>
    <id>http://nikohpng.github.io/2023/03/30/webrtc/WebRTC%E5%9C%A8ubuntu%E4%B8%AD%E7%BC%96%E8%AF%91android/</id>
    <published>2023-03-30T11:59:43.000Z</published>
    <updated>2023-03-30T12:18:59.815Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文将会讲解在 ubuntu 中拉取代码 flutter 中的 <a href="https://github.com/webrtc-sdk/webrtc.git">WebRTC</a> 并打包成 android 可以使用的 aar。</p><blockquote><p>注意：编译 Android 的时候，建议在国外的服务器上编译，否则可能出现无法获取各种依赖文件的问题</p></blockquote><h2 id="系统选择"><a href="#系统选择" class="headerlink" title="系统选择"></a>系统选择</h2><p>注意：在编译 android 端的 WebRTC 的时候必须选择 ubuntu，其中最好是采用以下版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu 14.04 LTS (trusty with EoL April 2022）</span><br><span class="line">Ubuntu 16.04 LTS (xenial with EoL April 2024）</span><br><span class="line">Ubuntu 18.04 LTS (bionic with EoL April 2028）</span><br><span class="line">Ubuntu 20.04 LTS (focal with Eol April 2030)</span><br><span class="line">Ubuntu 20.10 (groovy) </span><br><span class="line">Debian 10 (buster) or later</span><br></pre></td></tr></table></figure><p>如果不是，那么可能遇到一些环境问题，需要手动修改源码</p><h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><p>拉取 WebRTC 全程需要代理软件，所以请先设置好代理软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=http://192.168.101.21:7890</span><br><span class="line">export https_proxy=http://192.168.101.21:7890</span><br></pre></td></tr></table></figure><h2 id="安装-depot-tools"><a href="#安装-depot-tools" class="headerlink" title="安装 depot_tools"></a>安装 depot_tools</h2><p>depot_tools 是一套 Google 用来编译 WebRTC 的构建工具，获取 depot_tools 前，请先开启 VPN。</p><p>下载 <a href="https://storage.googleapis.com/chrome-infra/depot_tools.zip">depot_tools</a> 解压到某个目录，然后配置系统环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;export PATH=$PWD/depot_tools:$PATH&quot; &gt; $HOME/.bashrc</span><br><span class="line">source $HOME/.bashrc</span><br></pre></td></tr></table></figure><h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><p>获取源代码不能使用官网的源代码，必须到 <a href="https://github.com/webrtc-sdk/webrtc">webrtc-sdk</a> 中获取专门为 <a href="https://github.com/flutter-webrtc/flutter-webrtc">flutter-webrtc</a> 修改过的源码。<br>获取源码步骤如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir webrtc</span><br><span class="line">cd webrtc</span><br><span class="line">touch .gclient</span><br><span class="line">echo &quot;solutions &#x3D; [</span><br><span class="line">  &#123;</span><br><span class="line">    &#39;name&#39;: &#39;src&#39;,</span><br><span class="line">    &#39;url&#39;: &#39;https:&#x2F;&#x2F;github.com&#x2F;webrtc-sdk&#x2F;webrtc.git&#39;,</span><br><span class="line">    &#39;deps_file&#39;: &#39;DEPS&#39;,</span><br><span class="line">    &#39;managed&#39;: False,</span><br><span class="line">    &#39;custom_deps&#39;: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line">target_os &#x3D; [&#39;android&#39;]&quot; &gt; .gclient</span><br><span class="line">gclient sync --nohooks --no-history</span><br></pre></td></tr></table></figure><h2 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h2><ul><li><p>安装编译依赖：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gclient runhooks</span><br><span class="line">./src/build/install-build-deps.sh</span><br><span class="line">./src/build/install-build-deps-android.sh</span><br></pre></td></tr></table></figure></li><li><p>编译 aar 文件：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vpython3 ./tools_webrtc/android/build_aar.py --build-dir webrtc_android --output ./webrtc_android/libwebrtc.aar --arch armeabi-v7a arm64-v8a x86_64 x86 --extra-gn-args &#x27;is_java_debug=false rtc_include_tests=false rtc_use_h264=false is_component_build=false use_rtti=true rtc_build_examples=false treat_warnings_as_errors=false&#x27;</span><br></pre></td></tr></table></figure><h2 id="异常问题"><a href="#异常问题" class="headerlink" title="异常问题"></a>异常问题</h2></li></ul><p>拉取代码、安装依赖或者编译的时候可能出现一些奇怪的问题，此处将对遇到的问题进行分析以及提出相应的解决方案</p><ul><li>执行<code>./src/build/install-build-deps.sh</code>, 系统版本不适配(即没有按照步骤中的系统版本进行安装)<ul><li>原因：可能你使用的系统版本过高，过低那就没法了，至少要比上诉第一条中系统最低版本高</li><li>解决方案：通过 <code>lsb_release --codename --short</code> 查询系统 <strong>short name</strong>，加入到<code>./src/build/install-build-deps.sh</code>文件下的<code>supported_codenames</code> 变量中即可</li></ul></li><li>编译代码时可能出现缺少 LASTCHANGE 和 LASTCHANGE.committime 文件<ul><li>解决方案：直接前往内网 svn 获取 <a href="svn://10.10.0.1/svnrepos/%E8%81%94%E9%80%9A/WebRTC/Dependency/M92/Win">LASTCHANGE 和 LASTCHANGE.committime</a>即可</li></ul></li><li>编译时出现 <code>Mission sysroot</code> 错误<ul><li>原因：已经很明显，少 sysroot，并且提示里面要求 <strong>run: build/linux/sysroot_scripts/install-sysroot.py –arch=amd64</strong></li><li>解决方案：运行这个脚本即可，注意打开全局代理。如果还不行就手动下载，解压后放到<code>/usr/local/sysroot</code> 目录下，配置下 <code>/etc/profile</code> 指向 <code>sysroot</code> 这个文件夹<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   mkdir -p sysroot</span><br><span class="line">tar -xvf debian_bullseye_amd64_sysroot.tar.xz -C sysroot</span><br></pre></td></tr></table></figure></li></ul></li><li>编译时缺少 <strong>llvm-build</strong> 文件夹<ul><li>原因：不知道什么原因就是无法同步下来</li><li>解决方案：在国外服务器上同步下来后，把 <code>llvm-build</code> 文件拷贝下来即可。也可以用点击 <a href="">llvm-build</a>下载</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WebRTC" scheme="http://nikohpng.github.io/categories/WebRTC/"/>
    
    
    <category term="WebRTC编译" scheme="http://nikohpng.github.io/tags/WebRTC%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>FreeSWITCH中xml_rpc的使用技巧</title>
    <link href="http://nikohpng.github.io/2023/03/27/freeswitch/FreeSWITCH%E4%B8%ADxml-rpc%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://nikohpng.github.io/2023/03/27/freeswitch/FreeSWITCH%E4%B8%ADxml-rpc%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2023-03-27T13:12:18.000Z</published>
    <updated>2023-03-27T13:19:12.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要讲解在实际开发中，可能遇到的使用 xml_rpc 命令过程中的一些内容</p><h2 id="查询-api-的命令"><a href="#查询-api-的命令" class="headerlink" title="查询 api 的命令"></a>查询 api 的命令</h2><p>查看 xml_rpc 中的命令通过如下方式即可，在浏览器中打开如下链接：<code>http://127.0.0.1:8080/webapi/help</code></p><h2 id="调试命令"><a href="#调试命令" class="headerlink" title="调试命令"></a>调试命令</h2><ul><li>通过 curl 调用 lua 程序，并传递参数，其中空格需要用 %20 替换  <figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user yw:yw@123 http://127.0.0.1:7652/webapi/luarun?call_phone.lua%20var</span><br></pre></td></tr></table></figure></li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FreeSWTICH" scheme="http://nikohpng.github.io/categories/FreeSWTICH/"/>
    
    
    <category term="xml_rpc" scheme="http://nikohpng.github.io/tags/xml-rpc/"/>
    
  </entry>
  
  <entry>
    <title>FreeSWITCH中mod的状态变化</title>
    <link href="http://nikohpng.github.io/2023/03/23/freeswitch/FreeSWITCH%E4%B8%ADmod%E7%9A%84%E7%8A%B6%E6%80%81%E5%8F%98%E5%8C%96/"/>
    <id>http://nikohpng.github.io/2023/03/23/freeswitch/FreeSWITCH%E4%B8%ADmod%E7%9A%84%E7%8A%B6%E6%80%81%E5%8F%98%E5%8C%96/</id>
    <published>2023-03-23T13:05:32.000Z</published>
    <updated>2023-03-23T13:06:04.132Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要讲述在 endpoint 的 mod 在启动关闭与呼叫、挂断等其中的状态变化内容</p><h2 id="mod-的启动关闭"><a href="#mod-的启动关闭" class="headerlink" title="mod 的启动关闭"></a>mod 的启动关闭</h2><p>此处的状态变化最为简单，只有两个回调函数，分别如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SWITCH_MODULE_LOAD_FUNCTION(mod_test_load);</span><br><span class="line">SWITCH_MODULE_SHUTDOWN_FUNCTION(mod_test_shutdown);</span><br><span class="line">SWITCH_MODULE_DEFINITION(mod_test, mod_test_load, mod_test_shutdown, <span class="literal">NULL</span>); <span class="comment">// mod_test_runtime</span></span><br></pre></td></tr></table></figure><p>一般 runtime 都没用，暂时不明白作用。有个这个定义后，再实现相应的启动关闭函数，如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SWITCH_MODULE_LOAD_FUNCTION(mod_test_load) &#123;</span><br><span class="line">    <span class="comment">/// 你想要实现内容，宏展开后有如下参数</span></span><br><span class="line">    <span class="comment">/// switch_loadable_module_interface_t **module_interface, switch_memory_pool_t *pool</span></span><br><span class="line">&#125;</span><br><span class="line">SWITCH_MODULE_SHUTDOWN_FUNCTION(mod_janus_shutdown) &#123;</span><br><span class="line">    <span class="comment">/// 你想要实现内容，宏展开后是个 void，没有参数值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="channel-的状态变化"><a href="#channel-的状态变化" class="headerlink" title="channel 的状态变化"></a>channel 的状态变化</h2><p>channel 的状态变化较为复杂，此处先沿着外呼的流程走一遍所有流程，并会标明调用什么函数发生状态变化，以及状态变化涉及的含义。</p><p>此处先展示所有涉及的状态以及它们分别所属结构体</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch_state_handler_table_t</span> test_state_handlers = &#123;</span><br><span class="line">    <span class="comment">/*.on_init */</span> channel_on_init,</span><br><span class="line">    <span class="comment">/*.on_routing */</span> channel_on_routing,</span><br><span class="line">    <span class="comment">/*.on_execute */</span> channel_on_execute,</span><br><span class="line">    <span class="comment">/*.on_hangup */</span> channel_on_hangup,</span><br><span class="line">    <span class="comment">/*.on_exchange_media */</span> channel_on_exchange_media,</span><br><span class="line">    <span class="comment">/*.on_soft_execute */</span> channel_on_soft_execute,</span><br><span class="line">    <span class="comment">/*.on_consume_media */</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="comment">/*.on_hibernate */</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="comment">/*.on_reset */</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="comment">/*.on_park */</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="comment">/*.on_reporting */</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="comment">/*.on_destroy */</span> channel_on_destroy&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch_io_routines_t</span> test_io_routines = &#123;</span><br><span class="line">    <span class="comment">/*.outgoing_channel */</span> channel_outgoing_channel,</span><br><span class="line">    <span class="comment">/*.read_frame */</span> channel_read_frame,</span><br><span class="line">    <span class="comment">/*.write_frame */</span> channel_write_frame,</span><br><span class="line">    <span class="comment">/*.kill_channel */</span> channel_kill_channel,</span><br><span class="line">    <span class="comment">/*.send_dtmf */</span> channel_send_dtmf,</span><br><span class="line">    <span class="comment">/*.receive_message */</span> channel_receive_message,</span><br><span class="line">    <span class="comment">/*.receive_event */</span> channel_receive_event&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">test_endpoint_interface-&gt;io_routines = &amp;test_io_routines;</span><br><span class="line">test_endpoint_interface-&gt;state_handler = &amp;test_state_handlers;</span><br></pre></td></tr></table></figure><ul><li><p>外呼 –&gt; channel_outgoing_channel:</p><ul><li><p>参数如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">switch_call_cause_t</span> <span class="title">channel_outgoing_channel</span><span class="params">(<span class="keyword">switch_core_session_t</span> *session, <span class="keyword">switch_event_t</span> *var_event,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">switch_caller_profile_t</span> *outbound_profile,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">switch_core_session_t</span> **new_session, <span class="keyword">switch_memory_pool_t</span> **pool,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">switch_originate_flag_t</span> flags, <span class="keyword">switch_call_cause_t</span> *cancel_cause)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br></pre></td></tr></table></figure></li><li><p>作用：创建媒体流、创建channel、初始化参数等</p></li><li><p>状态变化函数：<code>switch_channel_set_state(channel, CS_INIT);</code></p></li><li><p>未知作用函数：<code>switch_set_flag_locked(tech_pvt, TFLAG_OUTBOUND);</code></p></li></ul></li><li><p>channel_outgoing_channel –&gt; channel_on_init:</p><ul><li><p>参数如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">switch_status_t</span> <span class="title">channel_on_init</span><span class="params">(<span class="keyword">switch_core_session_t</span> *session)</span></span></span><br></pre></td></tr></table></figure></li><li><p>作用：一般用户初始化该通呼叫所需要的一些初始化参数</p></li><li><p>返回值：状态值为 <code>SWITCH_STATUS_SUCCESS</code> 将自动进入下个状态，否则将跳过该此呼叫</p></li><li><p>状态变化函数：无</p></li><li><p>未知作用函数：<code>switch_set_flag_locked(tech_pvt, TFLAG_IO);</code></p></li></ul></li><li><p>channel_on_init –&gt; channel_on_routing:</p><ul><li><p>参数如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">switch_status_t</span> <span class="title">channel_on_routing</span><span class="params">(<span class="keyword">switch_core_session_t</span> *session)</span></span></span><br></pre></td></tr></table></figure></li><li><p>作用：一般在此处进行路由相关处理，准备编解码器、创建媒体流端口、生成sdp并与被叫方建立连接等工作</p></li><li><p>返回值：状态值为 <code>SWITCH_STATUS_SUCCESS</code> 将自动进入下个状态，否则将跳过该此呼叫</p></li><li><p>状态变化函数：<code>switch_channel_pre_answer(channel)</code> 和 <code>switch_channel_answer(channel)</code></p></li><li><p>未知作用函数：<code>switch_channel_set_flag(channel, CF_AUDIO);</code></p></li></ul></li><li><p>channel_on_routing –&gt; channel_on_execute: (可略)</p></li><li><p>channel_on_hangup:</p><ul><li><p>参数如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">switch_status_t</span> <span class="title">channel_on_hangup</span><span class="params">(<span class="keyword">switch_core_session_t</span> *session)</span></span></span><br></pre></td></tr></table></figure></li><li><p>作用：呼叫中断的时候，此处的函数就会被回调，无论是 a-leg 还是 b-leg, 一般用于销毁信令上的一些内容</p></li><li><p>返回值：状态值为 <code>SWITCH_STATUS_SUCCESS</code> 将自动进入下个状态，否则将跳过该此呼叫</p></li><li><p>状态变化函数：<code>switch_channel_hangup(channel, SWITCH_CAUSE_NORMAL_CLEARING);</code></p></li></ul></li><li><p>channel_on_hangup –&gt; channel_on_destroy:</p><ul><li><p>参数如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">switch_status_t</span> <span class="title">channel_on_destroy</span><span class="params">(<span class="keyword">switch_core_session_t</span> *session)</span></span></span><br></pre></td></tr></table></figure></li><li><p>作用：在呼叫被 hangup 完成后被回调，用于销毁初始化的媒体流、端口等</p></li><li><p>返回值：状态值为 <code>SWITCH_STATUS_SUCCESS</code> 将自动进入下个状态，否则将跳过该此呼叫</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FreeSWTICH" scheme="http://nikohpng.github.io/categories/FreeSWTICH/"/>
    
    
    <category term="channels" scheme="http://nikohpng.github.io/tags/channels/"/>
    
  </entry>
  
  <entry>
    <title>FreeSWITCH在Linux下编译模块编译</title>
    <link href="http://nikohpng.github.io/2023/03/22/freeswitch/FreeSWITCH%E5%9C%A8Linux%E4%B8%8B%E7%BC%96%E8%AF%91%E6%A8%A1%E5%9D%97%E7%BC%96%E8%AF%91/"/>
    <id>http://nikohpng.github.io/2023/03/22/freeswitch/FreeSWITCH%E5%9C%A8Linux%E4%B8%8B%E7%BC%96%E8%AF%91%E6%A8%A1%E5%9D%97%E7%BC%96%E8%AF%91/</id>
    <published>2023-03-22T13:21:15.000Z</published>
    <updated>2023-03-22T13:23:13.864Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要讲解在 Linux 环境下编译 FreeSWITCH 模块时的配置以及所遇到的问题</p><h2 id="Linux-下编译-MOD-的配置"><a href="#Linux-下编译-MOD-的配置" class="headerlink" title="Linux 下编译 MOD 的配置"></a>Linux 下编译 MOD 的配置</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FreeSWTICH" scheme="http://nikohpng.github.io/categories/FreeSWTICH/"/>
    
    
    <category term="mod" scheme="http://nikohpng.github.io/tags/mod/"/>
    
  </entry>
  
  <entry>
    <title>opus编解码相关介绍</title>
    <link href="http://nikohpng.github.io/2023/03/21/codec/opus%E7%BC%96%E8%A7%A3%E7%A0%81%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/"/>
    <id>http://nikohpng.github.io/2023/03/21/codec/opus%E7%BC%96%E8%A7%A3%E7%A0%81%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/</id>
    <published>2023-03-21T13:04:00.000Z</published>
    <updated>2023-03-22T13:16:32.861Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要讲解在实际开发中遇到的关于Opus的编解码问题</p><h2 id="SDP中OPUS介绍"><a href="#SDP中OPUS介绍" class="headerlink" title="SDP中OPUS介绍"></a>SDP中OPUS介绍</h2><p>在 SDP 中，任何其它采样率都不起作用，在 rtp 传输时默认采用 48000, 可以在 <a href="https://www.rfc-editor.org/rfc/rfc7587">rfc7587 Section 4.1</a> 中查看<br>如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Opus supports 5 different audio bandwidths, which can be adjusted</span><br><span class="line">during a stream.  The RTP timestamp is incremented with a 48000 Hz</span><br><span class="line">clock rate for all modes of Opus and all sampling rates.  The unit</span><br><span class="line">for the timestamp is samples per single (mono) channel.  The RTP</span><br><span class="line">timestamp corresponds to the sample time of the first encoded sample</span><br><span class="line">in the encoded frame.  For data encoded with sampling rates other</span><br><span class="line">than 48000 Hz, the sampling rate has to be adjusted to 48000 Hz.</span><br></pre></td></tr></table></figure><p>如果想要降低带宽，那么可以使用 <code>maxplaybackrate</code> 和 <code>maxaveragebitrate </code>，标准文档如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">3.1.1.  Recommended Bitrate</span><br><span class="line"></span><br><span class="line">   For a frame size of 20 ms, these are the bitrate &quot;sweet spots&quot; for  Opus in various configurations:</span><br><span class="line"></span><br><span class="line">   o  8-12 kbit&#x2F;s for NB speech,</span><br><span class="line">   o  16-20 kbit&#x2F;s for WB speech,</span><br><span class="line">   o  28-40 kbit&#x2F;s for FB speech,</span><br><span class="line">   o  48-64 kbit&#x2F;s for FB mono music, and</span><br><span class="line">   o  64-128 kbit&#x2F;s for FB stereo music.</span><br></pre></td></tr></table></figure><p>例如：如果想要使用 8000HZ 的 OPUS，那么 SDP 应该如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m&#x3D;audio 54312 RTP&#x2F;AVP 101</span><br><span class="line">a&#x3D;rtpmap:101 opus&#x2F;48000&#x2F;2</span><br><span class="line">a&#x3D;fmtp:101 maxplaybackrate&#x3D;8000; sprop-maxcapturerate&#x3D;8000; maxaveragebitrate&#x3D;12000</span><br></pre></td></tr></table></figure><h2 id="WebRTC-中非对称采样率工作"><a href="#WebRTC-中非对称采样率工作" class="headerlink" title="WebRTC 中非对称采样率工作"></a>WebRTC 中非对称采样率工作</h2><p>WebRTC 支持通信双方以非对称采样率工作。比如：A和B通话，A的采样率为48000，B的采样率为8000。如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A--&gt;B OfferSDP</span><br><span class="line">a&#x3D;rtpmap:111 opus&#x2F;48000&#x2F;2</span><br><span class="line">a&#x3D;rtcp-fb:111 transport-cc</span><br><span class="line">a&#x3D;fmtp:111 minptime&#x3D;10;useinbandfec&#x3D;1;maxplaybackrate&#x3D;16000</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">B--&gt;A AnswerSDP</span><br><span class="line">a&#x3D;rtpmap:111 opus&#x2F;48000&#x2F;2</span><br><span class="line">a&#x3D;rtcp-fb:111 transport-cc</span><br><span class="line">a&#x3D;fmtp:111 minptime&#x3D;10;useinbandfec&#x3D;1;maxplaybackrate&#x3D;48000</span><br></pre></td></tr></table></figure><p>最终，A 采样率为48000，B 采用率为 16000</p><h2 id="WebRTC-中声道数与编码器的关系"><a href="#WebRTC-中声道数与编码器的关系" class="headerlink" title="WebRTC 中声道数与编码器的关系"></a>WebRTC 中声道数与编码器的关系</h2><p>当声道数 2 时，OPUS 编码内部将使用 celt ,代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///FIXME 暂时未查阅到</span></span><br><span class="line">config.application = config.num_channels == <span class="number">1</span> ? AudioEncoderOpus::kVoip : AudioEncoderOpus::kAudio;</span><br></pre></td></tr></table></figure><h2 id="OPUS编解码"><a href="#OPUS编解码" class="headerlink" title="OPUS编解码"></a>OPUS编解码</h2><p>OPUS代码的时候使用 <a href="https://github.com/xiph/opus">opus</a> 进行编解码，可以使用 <code>opus/doc/trivial_example.c</code> 进行测试</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://stackoverflow.com/questions/60580526/linphone-opus-codec-sampling-rate">Linphone opus codec sampling rate</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="codec" scheme="http://nikohpng.github.io/categories/codec/"/>
    
    
    <category term="opus" scheme="http://nikohpng.github.io/tags/opus/"/>
    
  </entry>
  
  <entry>
    <title>wireshark抓包分析音视频</title>
    <link href="http://nikohpng.github.io/2023/03/20/tools/wireshark%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
    <id>http://nikohpng.github.io/2023/03/20/tools/wireshark%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90%E9%9F%B3%E8%A7%86%E9%A2%91/</id>
    <published>2023-03-20T11:36:01.000Z</published>
    <updated>2023-03-21T13:18:45.415Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要记录通过 wireshark 抓音视频的分析方法</p><h2 id="win上抓包分析"><a href="#win上抓包分析" class="headerlink" title="win上抓包分析"></a>win上抓包分析</h2><p>window上面主要以导入 lua 解析文件为主</p><ul><li><p>在 wireshark 安装目录下面，有个 init.lua， 在其中加入如下所示内容：</p>  <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dofile</span>(USER_DIR..filename)</span><br></pre></td></tr></table></figure></li><li><p>导入成功后，重启wireshark， 在工具栏中就会出现导入的 lua 文件名字。</p></li><li><p>随后到 <strong>编辑-&gt;首选项-&gt;协议</strong> 中根据需要解码的音视频，填写 payload 值</p></li><li><p>最后，当获取到 *.pcap 文件后，点击 工具-&gt;lua的名字 运行即可</p></li></ul><h2 id="linux上抓包分析opus"><a href="#linux上抓包分析opus" class="headerlink" title="linux上抓包分析opus"></a>linux上抓包分析opus</h2><p>此处步骤仅用于在 linux 上，通过命令行的形式分析 opus</p><ul><li>获取 python 脚本，<a href="https://github.com/kamanashisroy/opus_stream_tool">opus_stream_tool</a></li><li>tcpdump -i eth0 port 1234 -w in.pcap</li><li>tshark -x -r in.pcap -Y “udp.srcport == myport” | cut -d “ “ -f 1-20 &gt; tmp.txt</li><li>hex_to_opus.py -x tmp.txt –recordfile out.opus –rtpoffset 42</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="capture" scheme="http://nikohpng.github.io/categories/capture/"/>
    
    
    <category term="opus、h264" scheme="http://nikohpng.github.io/tags/opus%E3%80%81h264/"/>
    
  </entry>
  
  <entry>
    <title>通信发展与通信原理</title>
    <link href="http://nikohpng.github.io/2023/01/14/ims/signal/%E9%80%9A%E4%BF%A1%E5%8F%91%E5%B1%95%E4%B8%8E%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/"/>
    <id>http://nikohpng.github.io/2023/01/14/ims/signal/%E9%80%9A%E4%BF%A1%E5%8F%91%E5%B1%95%E4%B8%8E%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/</id>
    <published>2023-01-14T03:15:43.000Z</published>
    <updated>2023-01-14T03:16:57.746Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://www.bilibili.com/video/BV1f7411E7qt?p=45&vd_source=0d29a16004eefac32b97ba41ab3821c1">CMDA系统</a><br><a href="https://www.bilibili.com/video/BV1vr4y1L7mm/?vd_source=0d29a16004eefac32b97ba41ab3821c1">通信复习-多路复用的三种方法：频分复用，时分复用，码分复用</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ims" scheme="http://nikohpng.github.io/categories/ims/"/>
    
    
    <category term="signal" scheme="http://nikohpng.github.io/tags/signal/"/>
    
  </entry>
  
  <entry>
    <title>sip-i与sip-t的区别i</title>
    <link href="http://nikohpng.github.io/2023/01/14/ims/signal/sip-i%E4%B8%8Esip-t%E7%9A%84%E5%8C%BA%E5%88%ABi/"/>
    <id>http://nikohpng.github.io/2023/01/14/ims/signal/sip-i%E4%B8%8Esip-t%E7%9A%84%E5%8C%BA%E5%88%ABi/</id>
    <published>2023-01-14T02:41:12.000Z</published>
    <updated>2023-01-14T02:50:12.425Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>全球语音网络正在向基于IP的通信系统迁移。然而，现有的PSTN网络将继续存在一段时间。因此，VOIP和PSTN之间的互连能力在如今的语音市场上扮演重要的角色。</p><p>就像两种语言之间的翻译（英语&lt;-&gt;荷兰语），两个系统的映射作为基本的互连功能出现。</p><p>SIP-I和SIP-T是两种类似的方法，用于ISUP网络和SIP网络之间的互通，换句话说，就是PSTN和VoIP网络。具体来说，它们有助于通过SIP网络传送ISUP参数，这样在ISUP网络上发起和终止的呼叫就可以通过SIP网络转接，而不会丢失信息。</p><p>SIP-I和SIP-T都定义了SIP和ISUP网络之间的消息、参数和错误代码的映射。它们都可以与SIP网络上符合要求的SIP网络组件完全互操作。</p><p>SIP-I和SIP-T允许ISUP参数在SIP网络中透明传输的方式是，在入口处的PSTN网关将原始ISUP消息的字面副本附加到SIP消息中；这个ISUP消息作为另一个主体出现在SIP消息中。</p><h2 id="SIP-I-与-SIP-T-的不同点"><a href="#SIP-I-与-SIP-T-的不同点" class="headerlink" title="SIP-I 与 SIP-T 的不同点"></a>SIP-I 与 SIP-T 的不同点</h2><ul><li><p>SIP-I是由ITU在2004年开发的（定义在ITU-T Q.1912.5），而SIP-T是由开发SIP的IETF（互联网工程任务组）开发的。</p></li><li><p>SIP-I定义了从SIP到BICC以及ISUP的映射，而SIP-T只解决ISUP的问题。</p></li><li><p>SIP-T是为与本地SIP终端的互操作而设计的，而SIP-I只限于在PSTN网关之间使用。</p></li><li><p>SIP-I更准确，明确地定义了ISUP和SIP之间的参数，而且它详细地定义了电信互连的补充服务，这是SIP-T所不支持的。</p></li><li><p>SIP-I被制造商和运营商广泛接受，特别是软交换机和会话边界控制器（SBC）供应商。</p></li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://www.rfc-editor.org/rfc/rfc3261">RFC3261 (Session Initiation Protocol), ITU-T  Q.1912.5(Definition of SIP-I) and RFC3372 (SIP-T)</a><br><a href="https://www.differencebetween.com/difference-between-sip-i-and-sip-t/">Difference Between SIP-I and SIP-T</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="ims" scheme="http://nikohpng.github.io/categories/ims/"/>
    
    
    <category term="signal" scheme="http://nikohpng.github.io/tags/signal/"/>
    
  </entry>
  
  <entry>
    <title>janus的admin/api详解</title>
    <link href="http://nikohpng.github.io/2022/05/15/janus/janus%E7%9A%84admin-api%E8%AF%A6%E8%A7%A3/"/>
    <id>http://nikohpng.github.io/2022/05/15/janus/janus%E7%9A%84admin-api%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-05-15T02:29:34.000Z</published>
    <updated>2022-05-22T12:56:56.451Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此处讲解的 API 是用于检索 janus 的服务器信息和进行一部分的操作能力。如果你对插件内部的异步通知感兴趣，请通过 janus_eventhandler 机理</p><p>你可以通过配置 janus.transport.http.jcfg 中关于 admin API 部分，配置开启与关闭。其中你可以采用密码的形式或其它形式对访问 admin API 进行限制</p><p>当你使用 websockets 的时候，必须使用 Janus -admin-protocol 作为子协议。（可以参考janus-protocol）</p><h2 id="Admin-API-Requests"><a href="#Admin-API-Requests" class="headerlink" title="Admin API Requests"></a>Admin API Requests</h2><p>以下是不同的请求方式</p><h3 id="普通请求"><a href="#普通请求" class="headerlink" title="普通请求"></a>普通请求</h3><p>其中除了 info 都采用 <a href="https://192.168.1.51:7889/admin">https://192.168.1.51:7889/admin</a> post的形式。</p><ul><li><p>info: 用于获取服务器的一些信息，不需要秘钥即可请求</p><ul><li><p>request（get）</p>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后面的数字为时间戳 </span></span><br><span class="line">https://192.168.1.51:7889/admin/info?_=1652582968747</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;server_info&quot;</span>,                            <span class="comment">// janus的action</span></span><br><span class="line">   <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;NyCxLlMIe3W&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Janus WebRTC Server&quot;</span>,                    <span class="comment">// 服务器的名字，在 janus.c 中JANUS_NAME</span></span><br><span class="line">   <span class="attr">&quot;version&quot;</span>: <span class="number">118</span>,                                    <span class="comment">// 版本数字，同上</span></span><br><span class="line">   <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.11.8&quot;</span>,                        <span class="comment">// 版本字符串，同上</span></span><br><span class="line">   <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,                        <span class="comment">// 作者，在 janus.c 中 JANUS_AUTHOR</span></span><br><span class="line">   <span class="attr">&quot;commit-hash&quot;</span>: <span class="string">&quot;not-a-git-repo&quot;</span>,                    <span class="comment">// 提交hash</span></span><br><span class="line">   <span class="attr">&quot;compile-time&quot;</span>: <span class="string">&quot;Fri Mar 25 20:42:34 PDT 2022&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;log-to-stdout&quot;</span>: <span class="literal">true</span>,                            <span class="comment">// 日志输出到标准输出</span></span><br><span class="line">   <span class="attr">&quot;log-to-file&quot;</span>: <span class="literal">false</span>,                            <span class="comment">// 日志输出到文件</span></span><br><span class="line">   <span class="attr">&quot;data_channels&quot;</span>: <span class="literal">true</span>,                            <span class="comment">// 主要用于点对点的文本、文件传输（例如：janus plugin text room）</span></span><br><span class="line">   <span class="attr">&quot;accepting-new-sessions&quot;</span>: <span class="literal">true</span>,                    <span class="comment">// 是否接受新的 sessions（例如：当服务器资源耗尽时，拒绝接受新的request）</span></span><br><span class="line">   <span class="attr">&quot;session-timeout&quot;</span>: <span class="number">60</span>,                            <span class="comment">// session 的过期时间</span></span><br><span class="line">   <span class="attr">&quot;reclaim-session-timeout&quot;</span>: <span class="number">0</span>,</span><br><span class="line">   <span class="attr">&quot;candidates-timeout&quot;</span>: <span class="number">45</span>,                        <span class="comment">// 处理webrtc（ice）的候选者连接超时时间（例如：音视频通道连接超过45秒就抛弃这个通道）</span></span><br><span class="line">   <span class="attr">&quot;server-name&quot;</span>: <span class="string">&quot;MyJanusInstance&quot;</span>,                <span class="comment">// 服务器实例的名字，在 janus.c 中 JANUS_SERVER_NAME</span></span><br><span class="line">   <span class="attr">&quot;local-ip&quot;</span>: <span class="string">&quot;192.168.1.51&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;ipv6&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">   <span class="attr">&quot;ice-lite&quot;</span>: <span class="literal">false</span>,                                <span class="comment">// ice 的轻量版本，仅用于响应来自其它端的 ice 请求,且它等待其它端发送给他应该如何建立媒体流通道。（用于公网部署）</span></span><br><span class="line">   <span class="attr">&quot;ice-tcp&quot;</span>: <span class="literal">false</span>,                                <span class="comment">// ice 的连接采用 tcp 方式，有udp用 udp，没 udp 用 tcp。（注：libnice 小于  0.1.8 不支持 tcp）</span></span><br><span class="line">   <span class="attr">&quot;ice-nomination&quot;</span>: <span class="string">&quot;aggressive&quot;</span>,                    <span class="comment">// ice 的选举模式，即只要双方两端连接建立成功就立即通过优先级最高的连接发送音视频流。相应的regular模式会先check，然后根据双方网络状态等一系列因素选出最好的连接进行流传输</span></span><br><span class="line">   <span class="attr">&quot;ice-keepalive-conncheck&quot;</span>: <span class="literal">false</span>,                <span class="comment">// ice 连接保活，在发送媒体之前会处理保活请求（注：由于 libnice 的问题，目前此参数有bug，不建议开启）</span></span><br><span class="line">   <span class="attr">&quot;full-trickle&quot;</span>: <span class="literal">false</span>,                            <span class="comment">// full 是连接的双方都进行连通性检查（注意：可能降低音视频通话连接建立速度，因为c与s端都要收集候选者并进行连通性检查）                </span></span><br><span class="line">   <span class="attr">&quot;mdns-enabled&quot;</span>: <span class="literal">true</span>,                            <span class="comment">// 启用Multicast-DNS，如果false会移除localhost的候选者，如果不是内网使用，建议设置为false</span></span><br><span class="line">   <span class="attr">&quot;min-nack-queue&quot;</span>: <span class="number">200</span>,                            <span class="comment">// 每个句柄存储用于重传的数据包的最小时间窗口</span></span><br><span class="line">   <span class="attr">&quot;nack-optimizations&quot;</span>: <span class="literal">false</span>,                        <span class="comment">// 发送关键帧前清空 nack 队列（注意：不建议打开）</span></span><br><span class="line">   <span class="attr">&quot;twcc-period&quot;</span>: <span class="number">200</span>,                                <span class="comment">// webrtc 拥塞算法。定期对接收方进行反馈</span></span><br><span class="line">   <span class="attr">&quot;dtls-mtu&quot;</span>: <span class="number">1200</span>,                                <span class="comment">// dtls 的最大传输单元</span></span><br><span class="line">   <span class="attr">&quot;static-event-loops&quot;</span>: <span class="number">0</span>,                            <span class="comment">// ice 的事件循环</span></span><br><span class="line">   <span class="attr">&quot;api_secret&quot;</span>: <span class="literal">false</span>,                                <span class="comment">// 所有请求都带有密码</span></span><br><span class="line">   <span class="attr">&quot;auth_token&quot;</span>: <span class="literal">false</span>,                                <span class="comment">// 所有请求都带有 token</span></span><br><span class="line">   <span class="attr">&quot;event_handlers&quot;</span>: <span class="literal">false</span>,                            <span class="comment">// 是否启动事件处理机制，用于 janus 内部事件处理</span></span><br><span class="line">   <span class="attr">&quot;opaqueid_in_api&quot;</span>: <span class="literal">false</span>,                        <span class="comment">// janus内部事件使用的id</span></span><br><span class="line">   <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;glib2&quot;</span>: <span class="string">&quot;2.56.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;jansson&quot;</span>: <span class="string">&quot;2.10&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;libnice&quot;</span>: <span class="string">&quot;0.1.18&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;libsrtp&quot;</span>: <span class="string">&quot;libsrtp2 2.4.2&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;crypto&quot;</span>: <span class="string">&quot;OpenSSL 1.0.2k-fips  26 Jan 2017&quot;</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">&quot;transports&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;janus.transport.http&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS REST (HTTP/HTTPS) transport plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This transport plugin adds REST (HTTP/HTTPS) support to the Janus API via libmicrohttpd.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.2&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">2</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.transport.websockets&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS WebSockets transport plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This transport plugin adds WebSockets support to the Janus API via libwebsockets.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">&quot;events&quot;</span>: &#123;&#125;,</span><br><span class="line">   <span class="attr">&quot;loggers&quot;</span>: &#123;&#125;,</span><br><span class="line">   <span class="attr">&quot;plugins&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;janus.plugin.voicemail&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS VoiceMail plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a plugin implementing a very simple VoiceMail service for Janus, recording Opus streams.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.7&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">7</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.audiobridge&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS AudioBridge plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a plugin implementing an audio conference bridge for Janus, mixing Opus streams.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.12&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">12</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.echotest&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS EchoTest plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a trivial EchoTest plugin for Janus, just used to showcase the plugin interface.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.7&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">7</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.recordplay&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS Record&amp;Play plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a trivial Record&amp;Play plugin for Janus, to record WebRTC sessions and replay them.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.4&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">4</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.textroom&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS TextRoom plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a plugin implementing a text-only room for Janus, using DataChannels.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.2&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">2</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.videoroom&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS VideoRoom plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a plugin implementing a videoconferencing SFU (Selective Forwarding Unit) for Janus, that is an audio/video router.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.9&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">9</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.videocall&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS VideoCall plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a simple video call plugin for Janus, allowing two WebRTC peers to call each other through a server.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.6&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">6</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.nosip&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS NoSIP plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a simple RTP bridging plugin that leaves signalling details (e.g., SIP) up to the application.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.streaming&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS Streaming plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a streaming plugin for Janus, allowing WebRTC peers to watch/listen to pre-recorded files or media generated by an external source.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.8&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">8</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;janus.plugin.sip&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JANUS SIP plugin&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;Meetecho s.r.l.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;This is a simple SIP plugin for Janus, allowing WebRTC peers to register at a SIP server and call SIP user agents through a Janus instance.&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version_string&quot;</span>: <span class="string">&quot;0.0.8&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;version&quot;</span>: <span class="number">8</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>ping：一个简单的ping/pong机制，客户端可用该接口来链路检查及预测协议的路由时间，也是不需要秘钥即可请求</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;ping&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;pong&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>loops_info: 返回每个静态事件循环当前负责多少个句柄的摘要，以防静态事件循环正在使用</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;loops_info&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;loops&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="配置相关请求"><a href="#配置相关请求" class="headerlink" title="配置相关请求"></a>配置相关请求</h3><p>请求连接上同</p><ul><li><p>get_status：返回当前服务器能被Admin API动态修改的配置变量</p><ul><li><p>request:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;get_status&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;token_auth&quot;</span>: <span class="literal">false</span>,                    <span class="comment">// 启用请求带 token</span></span><br><span class="line">        <span class="attr">&quot;session_timeout&quot;</span>: <span class="number">60</span>,                    <span class="comment">// session 过期时间</span></span><br><span class="line">        <span class="attr">&quot;reclaim_session_timeout&quot;</span>: <span class="number">0</span>,            <span class="comment">// 过期后，任能唤醒 session 的时间</span></span><br><span class="line">        <span class="attr">&quot;candidates_timeout&quot;</span>: <span class="number">45</span>,                <span class="comment">// 候选超时时间</span></span><br><span class="line">        <span class="attr">&quot;log_level&quot;</span>: <span class="number">4</span>,                            <span class="comment">// 日志输出等级</span></span><br><span class="line">        <span class="attr">&quot;log_timestamps&quot;</span>: <span class="literal">false</span>,                <span class="comment">// 在每行日志前都加时间戳</span></span><br><span class="line">        <span class="attr">&quot;log_colors&quot;</span>: <span class="literal">true</span>,                        <span class="comment">// 日志输出颜色。在 console</span></span><br><span class="line">        <span class="attr">&quot;locking_debug&quot;</span>: <span class="literal">false</span>,                    <span class="comment">// 锁的实时调试，遇到僵尸进程有用</span></span><br><span class="line">        <span class="attr">&quot;refcount_debug&quot;</span>: <span class="literal">false</span>,                <span class="comment">// 参考计数器的实时调试, 遇到内存泄漏有用</span></span><br><span class="line">        <span class="attr">&quot;libnice_debug&quot;</span>: <span class="literal">false</span>,                    <span class="comment">// ice 的调试</span></span><br><span class="line">        <span class="attr">&quot;min_nack_queue&quot;</span>: <span class="number">200</span>,                    <span class="comment">// 每个句柄存储用于重传的数据包的最小时间窗口</span></span><br><span class="line">        <span class="attr">&quot;nack-optimizations&quot;</span>: <span class="literal">false</span>,            <span class="comment">// 发送关键帧前清空 nack 队列</span></span><br><span class="line">        <span class="attr">&quot;no_media_timer&quot;</span>: <span class="number">1</span>,                    <span class="comment">// 改变没有媒体流的计时器值</span></span><br><span class="line">        <span class="attr">&quot;slowlink_threshold&quot;</span>: <span class="number">0</span>                    <span class="comment">// 每秒丢包数，超过阈值就发送 slow_link 事件到客户端，0 不发送事件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>set_session_timeout: 改变全局的会话超时时间</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_session_timeout&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>: <span class="number">62</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_session_timeout&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>: <span class="number">62</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set_log_level: 改变日志等级</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_log_level&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;level&quot;</span>: <span class="number">6</span>,                            <span class="comment">// 0-7之间的值</span></span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;level&quot;</span>: <span class="number">6</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set_log_timestamps:使能或禁止在日志中添加时间戳</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_log_timestamps&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;timestamps&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;log_timestamps&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set_log_colors: 使能或禁止日志带颜色输出</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_log_colors&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;colors&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;log_colors&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set_locking_debug: 使能或禁止锁（互斥锁等）的实时调试，在遇到死锁时很有用</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_locking_debug&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;debug&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;locking_debug&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>set_refcount_debug:使能或禁止引用计数的实时调试，在遇到janus内部结构体内存泄漏时使用</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_refcount_debug&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;debug&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;refcount_debug&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set_libnice_debug:使能或禁止libnice库的调试</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_libnice_debug&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;debug&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;libnice_debug&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set_min_nack_queue:改变NACK队列的最小值</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_min_nack_queue&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;min_nack_queue&quot;</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;min_nack_queue&quot;</span>: <span class="number">200</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set_no_media_timer: 改变没有媒体流的计时器值</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_no_media_timer&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;no_media_timer&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;no_media_timer&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>set_slowlink_threshold: 每秒丢包数，超过阈值就发送 slow_link 事件到客户端，0 不发送事件</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;set_slowlink_threshold&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;slowlink_threshold&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>reponse</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;slowlink_threshold&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Token-相关的请求"><a href="#Token-相关的请求" class="headerlink" title="Token 相关的请求"></a>Token 相关的请求</h3><p>这部分请求只有在使能了token存储的机制之后才有效，即上面描述的 auth_token，不能使用token_auth_secret，否则就无法使用以下 api。后续的 create_session 类似都需要带上 token，否则会被拒绝</p><ul><li><p>add_token: 增加一个有效tocken</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;add_token&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;1234&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;plugins&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;janus.plugin.voicemail&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.audiobridge&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.echotest&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.recordplay&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.textroom&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.videoroom&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.videocall&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.nosip&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.streaming&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.sip&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>reponse</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;plugins&quot;</span>: [</span><br><span class="line">         <span class="string">&quot;janus.plugin.voicemail&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.audiobridge&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.echotest&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.recordplay&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.textroom&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.videoroom&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.videocall&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.nosip&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.streaming&quot;</span>,</span><br><span class="line">         <span class="string">&quot;janus.plugin.sip&quot;</span></span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>allow_token: 给与一个与插件使用相关的token</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;allow_token&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;1234&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;plugins&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;janus.plugin.voicemail&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.audiobridge&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>reponse</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;plugins&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;janus.plugin.voicemail&quot;</span>,</span><br><span class="line">            <span class="string">&quot;janus.plugin.audiobridge&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>disallow_token:移除一个与插件使用有关的token</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;disallow_token&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;1234&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;plugins&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;janus.plugin.voicemail&quot;</span>,</span><br><span class="line">        <span class="string">&quot;janus.plugin.audiobridge&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>reponse</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;plugins&quot;</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>list_tokens: 列出现存的所有token</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;list_tokens&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;CJjN1NTwZvui&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;1234&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;allowed_plugins&quot;</span>: [</span><br><span class="line">                    <span class="string">&quot;janus.plugin.voicemail&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.audiobridge&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.echotest&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.recordplay&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.textroom&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.videoroom&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.videocall&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.nosip&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.streaming&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;janus.plugin.sip&quot;</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>remove_token:删除一个token</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;remove_token&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;1234&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;eVyLDzjqfyg3&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;eVyLDzjqfyg3&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="会话相关的请求"><a href="#会话相关的请求" class="headerlink" title="会话相关的请求"></a>会话相关的请求</h3><ul><li><p>accept_new_sessions: 配置janus是否应该接受一个新的会话（当你任何时候想要清空一个janus实例使用这个非常方便）</p><ul><li><p>request:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;accept_new_sessions&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;accept&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>reponse</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;accept&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>list_sessions:列出现存的active状态的会话</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;list_sessions&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;z4a9ie1CZD97&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;z4a9ie1CZD97&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;sessions&quot;</span>: [</span><br><span class="line">        <span class="number">5861290772059172</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>destory_session: 销毁一个会话</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>:    <span class="string">&quot;destroy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>:    <span class="string">&quot;l1Mrk00izyzr&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;session_id&quot;</span>: <span class="number">3086529275573380</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;session_id&quot;</span>: <span class="number">3086529275573380</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;l1Mrk00izyzr&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="句柄及webrtc相关的请求"><a href="#句柄及webrtc相关的请求" class="headerlink" title="句柄及webrtc相关的请求"></a>句柄及webrtc相关的请求</h3><ul><li><p>list_handles: 列出现存的active状态的ICE句柄</p><ul><li><p>url：<code>https://ip:port/admin/session_id</code></p></li><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;list_handles&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;ZBJomuxVRUyQ&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;session_id&quot;</span>: <span class="number">2548810000107482</span>,</span><br><span class="line">   <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;ZBJomuxVRUyQ&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;handles&quot;</span>: [</span><br><span class="line">      <span class="number">743792752849709</span></span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>handle_info: 列出特定ICE句柄的所有信息。如果将plugin_only变量值设置为true则仅返回插件相关的信息，webrtc信息及状态均不会被包含在返回信息中。</p><ul><li><p>url：<code>https://ip:port/admin/session_id/handle_id</code></p></li><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;handle_info&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;DwzOP5mrCmX6&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response（video-room）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;session_id&quot;</span>: <span class="number">2548810000107482</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;DwzOP5mrCmX6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;handle_id&quot;</span>: <span class="number">743792752849709</span>,</span><br><span class="line">    <span class="attr">&quot;info&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;session_id&quot;</span>: <span class="number">2548810000107482</span>,</span><br><span class="line">        <span class="attr">&quot;session_last_activity&quot;</span>: <span class="number">152840675914</span>,</span><br><span class="line">        <span class="attr">&quot;session_timeout&quot;</span>: <span class="number">60</span>,</span><br><span class="line">        <span class="attr">&quot;session_transport&quot;</span>: <span class="string">&quot;janus.transport.http&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;handle_id&quot;</span>: <span class="number">743792752849709</span>,</span><br><span class="line">        <span class="attr">&quot;opaque_id&quot;</span>: <span class="string">&quot;videoroomtest-jDH6WBjAcyI4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;loop-running&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;created&quot;</span>: <span class="number">152597708101</span>,</span><br><span class="line">        <span class="attr">&quot;current_time&quot;</span>: <span class="number">152852556490</span>,</span><br><span class="line">        <span class="attr">&quot;plugin&quot;</span>: <span class="string">&quot;janus.plugin.videoroom&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;plugin_specific&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;publisher&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;room&quot;</span>: <span class="number">1234</span>,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="number">4406738697513809</span>,</span><br><span class="line">            <span class="attr">&quot;private_id&quot;</span>: <span class="number">1323301421</span>,</span><br><span class="line">            <span class="attr">&quot;display&quot;</span>: <span class="string">&quot;123&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;media&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;audio&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;audio_codec&quot;</span>: <span class="string">&quot;opus&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;video&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;video_codec&quot;</span>: <span class="string">&quot;vp8&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;data&quot;</span>: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;bitrate&quot;</span>: <span class="number">128000</span>,</span><br><span class="line">            <span class="attr">&quot;audio-level-dBov&quot;</span>: <span class="number">97</span>,</span><br><span class="line">            <span class="attr">&quot;talking&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;hangingup&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;destroyed&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;flags&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;got-offer&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;got-answer&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;negotiated&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;processing-offer&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;starting&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;ice-restart&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;ready&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;stopped&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;alert&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;trickle&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;all-trickles&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;resend-trickles&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;trickle-synced&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;data-channels&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;has-audio&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;has-video&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;new-datachan-sdp&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;rfc4588-rtx&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;cleaning&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;e2ee&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;agent-created&quot;</span>: <span class="number">152600228063</span>,</span><br><span class="line">        <span class="attr">&quot;ice-mode&quot;</span>: <span class="string">&quot;full&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ice-role&quot;</span>: <span class="string">&quot;controlled&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;sdps&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;profile&quot;</span>: <span class="string">&quot;UDP/TLS/RTP/SAVPF&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;local&quot;</span>: <span class="string">&quot;sdp&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;remote&quot;</span>: <span class="string">&quot;sdp&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;queued-packets&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;streams&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">&quot;ready&quot;</span>: <span class="number">-1</span>,</span><br><span class="line">                <span class="attr">&quot;ssrc&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;audio&quot;</span>: <span class="number">997893997</span>,</span><br><span class="line">                    <span class="attr">&quot;video&quot;</span>: <span class="number">1527131261</span>,</span><br><span class="line">                    <span class="attr">&quot;video-rtx&quot;</span>: <span class="number">3707199999</span>,</span><br><span class="line">                    <span class="attr">&quot;audio-peer&quot;</span>: <span class="number">3279797068</span>,</span><br><span class="line">                    <span class="attr">&quot;video-peer&quot;</span>: <span class="number">1111535207</span>,</span><br><span class="line">                    <span class="attr">&quot;video-peer-rtx&quot;</span>: <span class="number">996540079</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;direction&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;audio-send&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">&quot;audio-recv&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;video-send&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">&quot;video-recv&quot;</span>: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;codecs&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;audio-pt&quot;</span>: <span class="number">111</span>,</span><br><span class="line">                    <span class="attr">&quot;audio-codec&quot;</span>: <span class="string">&quot;opus&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;video-pt&quot;</span>: <span class="number">96</span>,</span><br><span class="line">                    <span class="attr">&quot;video-rtx-pt&quot;</span>: <span class="number">97</span>,</span><br><span class="line">                    <span class="attr">&quot;video-codec&quot;</span>: <span class="string">&quot;vp8&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;extensions&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;urn:ietf:params:rtp-hdrext:sdes:mid&quot;</span>: <span class="number">4</span>,</span><br><span class="line">                    <span class="attr">&quot;urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id&quot;</span>: <span class="number">10</span>,</span><br><span class="line">                    <span class="attr">&quot;urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id&quot;</span>: <span class="number">11</span>,</span><br><span class="line">                    <span class="attr">&quot;http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01&quot;</span>: <span class="number">3</span>,</span><br><span class="line">                    <span class="attr">&quot;urn:ietf:params:rtp-hdrext:ssrc-audio-level&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">&quot;urn:3gpp:video-orientation&quot;</span>: <span class="number">13</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;bwe&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;twcc&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;twcc-ext-id&quot;</span>: <span class="number">3</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;nack-queue-ms&quot;</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">&quot;rtcp_stats&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;audio&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;base&quot;</span>: <span class="number">48000</span>,</span><br><span class="line">                        <span class="attr">&quot;rtt&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;lost&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;lost-by-remote&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;jitter-local&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                        <span class="attr">&quot;jitter-remote&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;in-link-quality&quot;</span>: <span class="number">100</span>,</span><br><span class="line">                        <span class="attr">&quot;in-media-link-quality&quot;</span>: <span class="number">100</span>,</span><br><span class="line">                        <span class="attr">&quot;out-link-quality&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;out-media-link-quality&quot;</span>: <span class="number">0</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">&quot;video&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;base&quot;</span>: <span class="number">90000</span>,</span><br><span class="line">                        <span class="attr">&quot;rtt&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;lost&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;lost-by-remote&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;jitter-local&quot;</span>: <span class="number">3</span>,</span><br><span class="line">                        <span class="attr">&quot;jitter-remote&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;in-link-quality&quot;</span>: <span class="number">100</span>,</span><br><span class="line">                        <span class="attr">&quot;in-media-link-quality&quot;</span>: <span class="number">100</span>,</span><br><span class="line">                        <span class="attr">&quot;out-link-quality&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">&quot;out-media-link-quality&quot;</span>: <span class="number">0</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;components&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                        <span class="attr">&quot;state&quot;</span>: <span class="string">&quot;ready&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;connected&quot;</span>: <span class="number">152600440611</span>,</span><br><span class="line">                        <span class="attr">&quot;local-candidates&quot;</span>: [</span><br><span class="line">                            <span class="string">&quot;1 1 udp 2015363327 192.168.1.51 54605 typ host&quot;</span></span><br><span class="line">                        ],</span><br><span class="line">                        <span class="attr">&quot;remote-candidates&quot;</span>: [</span><br><span class="line">                            <span class="string">&quot;1755041049 1 udp 2122260223 192.168.74.1 51297 typ host generation 0 ufrag bTNl network-id 1&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;2530088836 1 udp 2122129151 192.168.1.106 51299 typ host generation 0 ufrag bTNl network-id 3&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;2272787581 1 udp 2122194687 172.16.100.1 51298 typ host generation 0 ufrag bTNl network-id 2&quot;</span></span><br><span class="line">                        ],</span><br><span class="line">                        <span class="attr">&quot;selected-pair&quot;</span>: <span class="string">&quot;192.168.1.51:54605 [host,udp] &lt;-&gt; 192.168.1.106:51299 [host,udp]&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;dtls&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;fingerprint&quot;</span>: <span class="string">&quot;2E:31:41:43:A9:AC:1F:58:AC:57:D7:15:6C:7E:DB:99:1D:13:58:4A:89:31:43:CB:F8:9F:97:26:2E:66:B9:76&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;remote-fingerprint&quot;</span>: <span class="string">&quot;CE:70:89:E8:0E:A0:F0:FC:42:7E:CB:75:54:29:C8:4A:A4:2D:C8:36:70:37:57:59:A8:AB:9D:62:19:A9:B6:A7&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;remote-fingerprint-hash&quot;</span>: <span class="string">&quot;sha-256&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;dtls-role&quot;</span>: <span class="string">&quot;active&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;dtls-state&quot;</span>: <span class="string">&quot;connected&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;retransmissions&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;valid&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                            <span class="attr">&quot;srtp-profile&quot;</span>: <span class="string">&quot;SRTP_AES128_CM_SHA1_80&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;ready&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                            <span class="attr">&quot;handshake-started&quot;</span>: <span class="number">152600440643</span>,</span><br><span class="line">                            <span class="attr">&quot;connected&quot;</span>: <span class="number">152600447955</span>,</span><br><span class="line">                            <span class="attr">&quot;sctp-association&quot;</span>: <span class="literal">false</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">&quot;in_stats&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;audio_packets&quot;</span>: <span class="number">12606</span>,</span><br><span class="line">                            <span class="attr">&quot;audio_bytes&quot;</span>: <span class="number">775132</span>,</span><br><span class="line">                            <span class="attr">&quot;audio_bytes_lastsec&quot;</span>: <span class="number">3036</span>,</span><br><span class="line">                            <span class="attr">&quot;do_audio_nacks&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="attr">&quot;video_packets&quot;</span>: <span class="number">7031</span>,</span><br><span class="line">                            <span class="attr">&quot;video_bytes&quot;</span>: <span class="number">1870792</span>,</span><br><span class="line">                            <span class="attr">&quot;video_bytes_lastsec&quot;</span>: <span class="number">6938</span>,</span><br><span class="line">                            <span class="attr">&quot;do_video_nacks&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                            <span class="attr">&quot;video_nacks&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;video_retransmissions&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;data_packets&quot;</span>: <span class="number">3</span>,</span><br><span class="line">                            <span class="attr">&quot;data_bytes&quot;</span>: <span class="number">2247</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">&quot;out_stats&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;audio_packets&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;audio_bytes&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;audio_bytes_lastsec&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;audio_nacks&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;video_packets&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;video_bytes&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;video_bytes_lastsec&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;video_nacks&quot;</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">&quot;data_packets&quot;</span>: <span class="number">3</span>,</span><br><span class="line">                            <span class="attr">&quot;data_bytes&quot;</span>: <span class="number">2298</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>start_pcap: 开始将发送的RTP/RTCP包抓包保存成pcap文件</p><ul><li><p>url：<code>https://ip:port/admin/session_id/handle_id</code></p></li><li><p>request:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;start_pcap&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;YHBmWC0jO2ax&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;folder&quot;</span>: <span class="string">&quot;/root/&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;b.pcap&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;truncate&quot;</span>: <span class="number">0</span>                            <span class="comment">// 抓取多少包截断，0 不截断</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;YHBmWC0jO2ax&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>stop_pcap:停止抓包</p><ul><li><p>url：<code>https://ip:port/admin/session_id/handle_id</code></p></li><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;stop_pcap&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>start_text2pcap:和start_pcap请求一样，但是保存为text文件。上同，其中 start_pcap 改为 start_text2pcap</p></li><li><p>stop_text2pcap:停止text2pcap抓包。上同，其中 stop_pcap 不变</p></li><li><p>message_plugin:发送同步消息给插件。几乎所有插件都实现该请求用于优化该插件的资源管理。管理插件内容，建议查看对应插件提供的同步 api，如 <a href="https://zhuanlan.zhihu.com/p/150461418">janus的videoroom插件</a>。（注：在 postman有所有的使用示例）</p><ul><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;message_plugin&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;plugin&quot;</span>: <span class="string">&quot;janus.plugin.videoroom&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;request&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;list&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;response&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;videoroom&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;room&quot;</span>: <span class="number">1234</span>,</span><br><span class="line">                <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Demo Room&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;pin_required&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">&quot;is_private&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">&quot;max_publishers&quot;</span>: <span class="number">6</span>,</span><br><span class="line">                <span class="attr">&quot;bitrate&quot;</span>: <span class="number">128000</span>,</span><br><span class="line">                <span class="attr">&quot;fir_freq&quot;</span>: <span class="number">10</span>,</span><br><span class="line">                <span class="attr">&quot;require_pvtid&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">&quot;require_e2ee&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">&quot;notify_joining&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">&quot;audiocodec&quot;</span>: <span class="string">&quot;opus&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;videocodec&quot;</span>: <span class="string">&quot;vp8&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;opus_fec&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;record&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">&quot;lock_record&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">&quot;num_participants&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">&quot;audiolevel_ext&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;audiolevel_event&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;audio_active_packets&quot;</span>: <span class="number">100</span>,</span><br><span class="line">                <span class="attr">&quot;audio_level_average&quot;</span>: <span class="number">25</span>,</span><br><span class="line">                <span class="attr">&quot;videoorient_ext&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;playoutdelay_ext&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;transport_wide_cc_ext&quot;</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>handup_webrtc: 挂断特定ICE句柄的PeerConnection，结果类似与主动挂断某个用户</p><ul><li><p>url：<code>https://ip:port/admin/session_id/handle_id</code></p></li><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;hangup_webrtc&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;session_id&quot;</span>: <span class="number">4537884414371202</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>detach_handle:分离特定的句柄，和 janus API 的 detach 消息的功能一致。功能与 attach 相反</p><ul><li><p>url：<code>https://ip:port/admin/session_id/handle_id</code></p></li><li><p>request</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;detach_handle&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;admin_secret&quot;</span>: <span class="string">&quot;janusoverlord&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>response</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;janus&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;session_id&quot;</span>: <span class="number">4537884414371202</span>,</span><br><span class="line">    <span class="attr">&quot;transaction&quot;</span>: <span class="string">&quot;40dHehG1RkxP&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/150461418">janus的videoroom插件</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="janus" scheme="http://nikohpng.github.io/categories/janus/"/>
    
    
    <category term="janus-admin" scheme="http://nikohpng.github.io/tags/janus-admin/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg在Win编译并运行</title>
    <link href="http://nikohpng.github.io/2022/04/04/ffmpeg/setting_make/FFmpeg%E5%9C%A8Win%E7%BC%96%E8%AF%91%E5%B9%B6%E8%BF%90%E8%A1%8C/"/>
    <id>http://nikohpng.github.io/2022/04/04/ffmpeg/setting_make/FFmpeg%E5%9C%A8Win%E7%BC%96%E8%AF%91%E5%B9%B6%E8%BF%90%E8%A1%8C/</id>
    <published>2022-04-04T07:27:05.000Z</published>
    <updated>2022-04-04T08:31:09.292Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本人选择编译的 FFmpeg 不是在 Linux 环境下面，也不是在 Win 环境下面的模拟 Linux 环境（例如：mgwin、cygwin）。</p><p>使用 vs 搭建 FFmpeg，其主要目的是为了方便调试与学习。本人较为喜欢 vs 的调试。</p><p>采用的 <a href="https://github.com/ShiftMediaProject/FFmpeg">FFmpeg</a> 是专门为 Win 环境做了适配。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table><thead><tr><th>环境名</th><th>版本</th></tr></thead><tbody><tr><td>WIN</td><td>WIN10</td></tr><tr><td>VS</td><td>vs2017</td></tr></tbody></table><h2 id="基础的搭建"><a href="#基础的搭建" class="headerlink" title="基础的搭建"></a>基础的搭建</h2><p>关于最基本的搭建内容有很多文章都有关于这方面的叙述，此处我将只会叙述一个大概主要的安装流程。</p><p>至于其中更详细内容可以参考下面的引用</p><ul><li>第一步：创建文件夹目录，目录结构如下所示  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- msvc (OutputDir)　　　　　　　　　　　　　 　　</span><br><span class="line">- source　　　　　　　　　　　　　　　　　 　　　</span><br><span class="line">　　- FFmpeg 　　　　　　　　　　　　　　　　　　</span><br><span class="line">　　- ..Any other libraries source code..</span><br></pre></td></tr></table></figure></li><li>第二步：使用 FFmpeg 项目目录下面的 project_get_dependencies.bat 脚本运行并获取依赖项目。<blockquote><p>注意：此处由于国内的原因，可以采用代理或者直接网上下载的方式获取，建议采用脚本，方便更新</p></blockquote></li><li>第三步：下载额外依赖的头文件到 msvc 的 include 的目录中<ul><li><a href="https://www.khronos.org/registry/OpenGL/api/GL/">下载</a> opengl 的 glext.h 和 wglext.h  到  “ msvc/include/gl/* “</li><li><a href="https://www.khronos.org/registry/EGL/api/KHR/">下载</a> opengl 的 khrplatform.h 到 “ msvc/include/KHR/* “</li><li><a href="https://github.com/FFmpeg/nv-codec-headers">下载</a>  nv-codec-headers 项目的 “include” 文件夹下的内容到  “ msvc/include/* “</li><li><a href="https://github.com/GPUOpen-LibrariesAndSDKs/AMF">下载</a> AMF 项目的  “amf/public/include” 文件夹下的内容到  “ msvc/include/AMF/* “</li></ul></li><li>第四步：安装 <a href="https://github.com/ShiftMediaProject/VSNASM/releases/latest">nasm</a> 与 <a href="https://github.com/ShiftMediaProject/VSYASM/releases">yasm</a><br>。将内容下载到本地后解压到 msvc 目录并分别使用管理员权限执行其中的 install_script.bat 脚本</li><li>第五步：使用 visual studio 打开 <strong>FFmpeg/SMP/ffmpeg_desp.sln</strong> 项目文件</li></ul><p>以上是编译时候的主要步骤，下面是在此过程中所遇到的问题以及解决方案</p><h2 id="问题与解决"><a href="#问题与解决" class="headerlink" title="问题与解决"></a>问题与解决</h2><ul><li><p>关于依赖的缺失：我这边由于是新项目，网络上的很多描述没涉及到其中缺失的一些项目。</p><blockquote><p>解决方案：在 ShiftMediaProject 这个 github 账号里面将缺失的项目都下载或者克隆到 source 目录下面，然后重启 vs 即可</p></blockquote></li><li><p>关于 h264 与 h265 项目无法编译：在保证 yasm 与 nasm 正确的情况下，仍然无法编译，编译器一直提示缺少 win sdk8.1</p><blockquote><p>解决方案：通过 vs intall 下载安装好 sdk8.1 的内容</p></blockquote></li><li><p>关于新项目无法加载 uwp 结尾的项目问题：此问题是本地项目中没有安装 uwp 的库</p><blockquote><p>解决方案：同样可以通过安装 uwp 的内容解决，实际情况以个人开发者的环境为准</p></blockquote></li><li><p>关于一些项目缺失某些头文件：注意查看情况，缺失头文件一般有两种情况。一种是这个项目的依赖项目编译失败，查看方式就是去 msvc/include 下面看是否有这个依赖项目的头文件<br>；第二种情况是这个项目依赖的 submodule 没有下载成功（例如：gnulib），查看方式是报错的时候会指向具体的某个编译的项目。</p><blockquote><p>解决方案：如果是 submodule ，那么可以使用 <code>git submodule update</code> 来获取子项目，一直获取失败的话可以直接下载后拷贝进去。如果是<br>项目缺失的直接按照第一条的解决方式即可解决 </p></blockquote></li></ul><p>最后，总结下。如果缺失某些头文件，请仔细思考是否是该项目的依赖项目编译失败。直接单独编译该项目或指明的依赖项目就可以准确定位了。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://www.cnblogs.com/BensonLaur/p/10989115.html">使用 VS2015 编译并调试 ffmpeg</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FFmpeg" scheme="http://nikohpng.github.io/categories/FFmpeg/"/>
    
    
    <category term="make" scheme="http://nikohpng.github.io/tags/make/"/>
    
  </entry>
  
  <entry>
    <title>视频会议简单认识</title>
    <link href="http://nikohpng.github.io/2022/03/06/view/%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/"/>
    <id>http://nikohpng.github.io/2022/03/06/view/%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%86/</id>
    <published>2022-03-06T03:49:38.000Z</published>
    <updated>2022-03-11T13:51:32.012Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>音视频通话主要需要解决以下几个问题，怎么找到对方；如何与对方连接以及如何看到（听到）对方。那么音视频会议就是要解决如何管理控制音视频通话。</p><h2 id="如何发现对方"><a href="#如何发现对方" class="headerlink" title="如何发现对方"></a>如何发现对方</h2><h3 id="信令"><a href="#信令" class="headerlink" title="信令"></a>信令</h3><p>视频会议系统经过几十年的发展，信令层面两分天下。传统视频会议设备一般走 H323 协议，互联网一般走 SIP 协议。但是随着互联网的高速发展，目前的会议设备与会议系统都同时支持 H323 与 SIP 协议，其中 H323 一般作为网关用于支持一些专业的视频会议终端，SIP 作为集群部署时服务间的信令通信。其中代表有华为、思科等老牌视频会议方案供应商。至于提供公共视频会议的方案的厂商（如腾讯、阿里），一般采用自有的私有协议，需要第三方厂商或自己去开发以支持 SIP 协议。</p><h3 id="库"><a href="#库" class="headerlink" title="库"></a>库</h3><ul><li><a href="https://github.com/freeswitch/sofia-sip">sofia-sip</a></li><li><a href="https://www.h323plus.org/">h323Plus</a></li><li><a href="https://jssip.net/">jssip</a></li></ul><h2 id="如何与对面连接"><a href="#如何与对面连接" class="headerlink" title="如何与对面连接"></a>如何与对面连接</h2><h3 id="SDP-与-COTURN"><a href="#SDP-与-COTURN" class="headerlink" title="SDP 与 COTURN"></a>SDP 与 COTURN</h3><p>音视频在复杂网络环境下的音视频流传输一直是一个问题，此问题一般只有大厂（如：思科、华为等）才能有成熟的解决方案。目前，开源的 WebRTC 通过 SDP 与 COTURN 解决了在复杂网络环境的连接问题。</p><h3 id="库-1"><a href="#库-1" class="headerlink" title="库"></a>库</h3><ul><li><a href="https://github.com/coturn/coturn">coturn</a></li><li><a href="https://github.com/sipwise/rtpengine">rtpegine</a></li></ul><h2 id="如何看到与听到对方"><a href="#如何看到与听到对方" class="headerlink" title="如何看到与听到对方"></a>如何看到与听到对方</h2><h3 id="音视频采集"><a href="#音视频采集" class="headerlink" title="音视频采集"></a>音视频采集</h3><p>音视频的采集目前需要根据不同的平台与设备进行单独的音视频流采集，采集后的音视频就可以进行编码，然后通过 WebRTC 重新封装或者 RTP 直接发送给对方</p><h3 id="视频编码"><a href="#视频编码" class="headerlink" title="视频编码"></a>视频编码</h3><p>视频编解码方面又是风气时！目前的视频会议系统中一般都提供对 H264 的支持，好点的更能支持 H264HP。随着互联网的发展，人们对视频提出更苛刻的要求，因而 H265 应运而生。但是 H265 的授权造成一定的困扰，传统视频会议厂商应该没有太多的选择余地。互联网企业这边提出了满足他们需求的开源的 AV1 视频编码，目前此协议还在发展阶段，有待观察。</p><p>至于 Google 的 开源的VP8、VP9等，主要一般用户 Web 端这块儿，在其它地方未曾看到有具体的使用场景。目前 chrome 自己本身也支持 H264 ，在开发中一般直接选择 H264。下图是视频会议厂商维海德的 C9 设备终端的视频编解码能力支持列表：</p><p><img src= "/img/loading.gif" data-lazy-src="E:\workspace\blog\source\images\view\视频能力.png" alt="音频能力1"></p><h3 id="库-2"><a href="#库-2" class="headerlink" title="库"></a>库</h3><ul><li><a href="https://github.com/cisco/openh264">openh264</a>：据说对音视频流有优化</li><li><a href="https://www.videolan.org/developers/x264.html">xh264</a>: vlc 的 h264 库，适合于点播这类存储</li></ul><h3 id="音频编码"><a href="#音频编码" class="headerlink" title="音频编码"></a>音频编码</h3><p>音频编解码方面，音视频会议的主流解决方案是 opus 、g711、g722 等编码方案。其中 opus 主要用于带宽较低或网络较差的网络环境，g711 或 g722 用于带宽高且网络环境稳定的网络环境。下图是视频会议厂商维海德的 C9 设备终端的音频编解能力支持列表：</p><p><img src= "/img/loading.gif" data-lazy-src="E:\workspace\blog\source\images\view\音频能力1.png" alt="音频能力1"></p><p><img src= "/img/loading.gif" data-lazy-src="E:\workspace\blog\source\images\view\音频能力2.png" alt="音频能力2"></p><p><img src= "/img/loading.gif" data-lazy-src="E:\workspace\blog\source\images\view\音频能力3.png" alt="音频能力3"></p><h2 id="如何控制音视频通话"><a href="#如何控制音视频通话" class="headerlink" title="如何控制音视频通话"></a>如何控制音视频通话</h2><h3 id="MCU"><a href="#MCU" class="headerlink" title="MCU"></a>MCU</h3><p>MCU（全称：Multipoint Conferencing Unit，多点会议控制单元），采用全变全解的方式。</p><p>主要有以下优缺点。</p><ul><li>优点：<ul><li>技术非常成熟，在硬件视频会议中应用非常广泛。</li><li>作为音视频网关，通过解码、再编码可以屏蔽不同编解码设备的差异化，满足更多客户的集成需求。</li><li>将多路视频混合成一路，所有参与人看到的是相同的画面，客户体验非常好。</li></ul></li><li>缺点：<ul><li>重新解码、编码、混流，需要大量的运算，对 CPU 资源的消耗很大。</li><li>重新解码、编码、混流还会带来延迟。</li></ul></li></ul><h4 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h4><ul><li>FS（全称：FreeSWITCH）: 音视频交换服务，目前比较主流的服务器</li></ul><h3 id="SFU"><a href="#SFU" class="headerlink" title="SFU"></a>SFU</h3><p>SFU（全称：Selective Forwarding Unit）该方案只管将音视频进行转发，不对音视频进行任何处理。主要有以下优缺点。</p><ul><li>优点：<ul><li>由于直接转发数据包，不需要编解码，对 CPU 资源消耗小</li><li>能够适应不同的网络环境</li></ul></li><li>缺点：<ul><li>参与人多路视频时可能出现不同步的问题</li><li>参与人同时观看多路视频，在多路视频窗口显示、渲染等会带来很多麻烦，尤其对多人实时通信进行录制，多路流也会带来很多回放的困难</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>目前的传统音视频厂商如（华为、思科）一般走 MCU 的控制方式，互联网企业（如：腾讯、阿里）从各种 QQ 与行业认识交流中得知也是走 MCU 的控制方式。本人目前了解到的走 SFU 的国内有两家公司，具体有多少或为什么选择这条技术路线都不可知。目前能够已知的就是走 SFU 无法直接与现有的设备进行互联互通，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="view" scheme="http://nikohpng.github.io/categories/view/"/>
    
    
    <category term="视频会议" scheme="http://nikohpng.github.io/tags/%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg的配置安装错误记录</title>
    <link href="http://nikohpng.github.io/2022/01/25/ffmpeg/setting_make/FFmpeg%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    <id>http://nikohpng.github.io/2022/01/25/ffmpeg/setting_make/FFmpeg%E7%9A%84%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/</id>
    <published>2022-01-25T13:06:36.000Z</published>
    <updated>2022-02-08T13:02:21.879Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要记录本人在编译安装 FFmpeg 的时候出现的各种问题，这种问题出现在各种环境中，因而我会标明不同的环境下面。</p><p>当然主要环境分为三大类 Win、Linux和交叉编译，Mac本人没有就不算在里面。</p><h2 id="“libavutil-avconfig-h”-No-such-file-or-directory"><a href="#“libavutil-avconfig-h”-No-such-file-or-directory" class="headerlink" title="“libavutil/avconfig.h”: No such file or directory"></a><code>“libavutil/avconfig.h”: No such file or directory</code></h2><ul><li><p>背景：我在 Win 环境中编译 FreeSWITCH 的 mod_av 模块的时候，这个模块依赖于 FFmpeg，因而总是报这个错误。</p></li><li><p>错误信息：<br>  <img src= "/img/loading.gif" data-lazy-src="../../../../../../images/ffmpeg/setting_make/questions/avconfig_err.png" alt="avconfig_err"></p></li><li><p>解决：</p><ul><li>方案一：这个文件是中的内容是自动生成的，最好的方式让其能够自己生成（由于 FreeSWITCH 的 FFmpeg 只配置了<br>x64 平台的，所以 debug 运行时需要选择 x64 平台，否则会出现这个问题）</li><li>方案二：直接从外部拷贝一个已经生成好的文件到此处即可，在 Linux 平台上编译了的话就会搜索到这个文件</li><li>方案三：直接创建该文件并复制其中的内容  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Generated by ffmpeg configure */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> AVUTIL_AVCONFIG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AVUTIL_AVCONFIG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_HAVE_BIGENDIAN 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AV_HAVE_FAST_UNALIGNED 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* AVUTIL_AVCONFIG_H */</span></span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FFmpeg" scheme="http://nikohpng.github.io/categories/FFmpeg/"/>
    
    
    <category term="make" scheme="http://nikohpng.github.io/tags/make/"/>
    
  </entry>
  
  <entry>
    <title>FreeSWITCH中管理依赖下载方式</title>
    <link href="http://nikohpng.github.io/2022/01/23/freeswitch/FreeSWITCH%E4%B8%AD%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F/"/>
    <id>http://nikohpng.github.io/2022/01/23/freeswitch/FreeSWITCH%E4%B8%AD%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F/</id>
    <published>2022-01-23T10:25:03.000Z</published>
    <updated>2022-01-23T10:36:12.532Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>由于本人不是纯正的 VS 开发人员，本人一直很疑惑 FreeSWITCH 是如何管理它的所有依赖下载的，<br>以及下载后的依赖如何编译进入 FreeSWWITCH 的整体项目中的。</p><p>因而这里记录下在我实际开发过程中，发现的 FreeSWITCH 的管理依赖的方式。</p><h2 id="依赖下载"><a href="#依赖下载" class="headerlink" title="依赖下载"></a>依赖下载</h2><p>我们首先要确定 FreeSWITCH 都有哪些依赖内容，他们的依赖内容是什么样子的。</p><p>FreeSWITCH 依赖的都是例如 ffmpeg、libyuv 等这种成熟的项目，因而肯定需要从外部进行下载，<br>这些从外部的下载肯定有具体的配置位置。</p><p>开发中发现本地的依赖项目都是通过 vs 的属性管理器进行依赖管理，这个属于 vs 的依赖管理，因而很容易<br>就思考到是否也是采用同样的方式进行远程的这种依赖。</p><p>那么，我们就要在属性管理器中看下这些依赖是否在这里配置，很显然属性配置器中无法看到具体的下载内容。<br>我们立即想到去看源文件。</p><p>最终，我们可以在 w32 中发现各种标有 download 开头的 props 文件，直接打开文件就可以看到里面的<br>带有 http 下载链接的属性</p><h2 id="依赖如何打包进-FS-中"><a href="#依赖如何打包进-FS-中" class="headerlink" title="依赖如何打包进 FS 中"></a>依赖如何打包进 FS 中</h2><p>从上面我们已经知道了 FS 中的依赖下载，下面我们来看下 FS 是如何将第三方内容依赖进 FS 中的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FreeSWTICH" scheme="http://nikohpng.github.io/categories/FreeSWTICH/"/>
    
    
    <category term="依赖" scheme="http://nikohpng.github.io/tags/%E4%BE%9D%E8%B5%96/"/>
    
  </entry>
  
  <entry>
    <title>FreeSWITCH解析originate命令</title>
    <link href="http://nikohpng.github.io/2022/01/20/freeswitch/FreeSWITCH%E8%A7%A3%E6%9E%90originate%E5%91%BD%E4%BB%A4/"/>
    <id>http://nikohpng.github.io/2022/01/20/freeswitch/FreeSWITCH%E8%A7%A3%E6%9E%90originate%E5%91%BD%E4%BB%A4/</id>
    <published>2022-01-20T12:20:44.000Z</published>
    <updated>2022-02-24T12:32:49.500Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>我们在实现任何外部呼叫能力的时候无论如何都绕不开 originate 命令或者说 bridge。</p><p>当然为了简单起见，我这里先跟着 originate 进行源代码分析。 </p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table><thead><tr><th>环境名</th><th>版本</th></tr></thead><tbody><tr><td>WIN</td><td>WIN10</td></tr><tr><td>FS</td><td>1.10.0</td></tr><tr><td>VS</td><td>vs2017</td></tr></tbody></table><h2 id="originate-function"><a href="#originate-function" class="headerlink" title="originate_function"></a><code>originate_function</code></h2><p>mod_commands 这个模块，集成 FreeSWITCH 大部分的命令，而 originate 命令就是其中的一个命令。位于 mod_commands.c 中，</p><p>其中代码如下 ：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ORIGINATE_SYNTAX                                                                                               \</span></span><br><span class="line">    <span class="string">&quot;&lt;call url&gt; &lt;exten&gt;|&amp;&lt;application_name&gt;(&lt;app_args&gt;) [&lt;dialplan&gt;] [&lt;context&gt;] [&lt;cid_name&gt;] [&lt;cid_num&gt;] &quot;</span>            \</span><br><span class="line">    <span class="string">&quot;[&lt;timeout_sec&gt;]&quot;</span></span><br><span class="line">SWITCH_STANDARD_API(originate_function)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch_channel_t</span> *caller_channel;</span><br><span class="line">    <span class="keyword">switch_core_session_t</span> *caller_session = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">// 定义解析命令参数的内容</span></span><br><span class="line">    <span class="keyword">char</span> *mycmd = <span class="literal">NULL</span>, *argv[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, x, argc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> *aleg, *exten, *dp, *context, *cid_name, *cid_num;</span><br><span class="line">    <span class="keyword">uint32_t</span> timeout = <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">switch_call_cause_t</span> cause = SWITCH_CAUSE_NORMAL_CLEARING;</span><br><span class="line">    <span class="keyword">switch_status_t</span> status = SWITCH_STATUS_SUCCESS;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (zstr(cmd)) &#123;</span><br><span class="line">        stream-&gt;write_function(stream, <span class="string">&quot;-USAGE: %s\n&quot;</span>, ORIGINATE_SYNTAX);</span><br><span class="line">        <span class="keyword">return</span> SWITCH_STATUS_SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否曾经已经建立过连接（此处 session 是通过 SWITCH_STANDARD_API 扩展函数名得到）</span></span><br><span class="line">    <span class="comment">/* log warning if part of ongoing session, as we&#x27;ll block the session */</span></span><br><span class="line">    <span class="keyword">if</span> (session) &#123;</span><br><span class="line">        switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(session), SWITCH_LOG_NOTICE,</span><br><span class="line">                          <span class="string">&quot;Originate can take 60 seconds to complete, and blocks the existing session. Do not confuse &quot;</span></span><br><span class="line">                          <span class="string">&quot;with a lockup.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拷贝命令行参数并根据空格进行字符串分割</span></span><br><span class="line">    mycmd = strdup(cmd);</span><br><span class="line">    switch_assert(mycmd);</span><br><span class="line">    argc = switch_separate_string(mycmd, <span class="string">&#x27; &#x27;</span>, argv, (<span class="keyword">sizeof</span>(argv) / <span class="keyword">sizeof</span>(argv[<span class="number">0</span>])));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span> || argc &gt; <span class="number">7</span>) &#123;</span><br><span class="line">        stream-&gt;write_function(stream, <span class="string">&quot;-USAGE: %s\n&quot;</span>, ORIGINATE_SYNTAX);</span><br><span class="line">        <span class="keyword">goto</span> done;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; argc &amp;&amp; argv[x]; x++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!strcasecmp(argv[x], <span class="string">&quot;undef&quot;</span>)) &#123; argv[x] = <span class="literal">NULL</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 参数赋值到变量中</span></span><br><span class="line">    aleg = argv[i++];</span><br><span class="line">    exten = argv[i++];</span><br><span class="line">    dp = argv[i++];</span><br><span class="line">    context = argv[i++];</span><br><span class="line">    cid_name = argv[i++];</span><br><span class="line">    cid_num = argv[i++];</span><br><span class="line"></span><br><span class="line">    switch_assert(exten);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!dp) &#123; dp = <span class="string">&quot;XML&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!context) &#123; context = <span class="string">&quot;default&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argv[<span class="number">6</span>]) &#123; timeout = atoi(argv[<span class="number">6</span>]); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发起呼叫</span></span><br><span class="line">    <span class="keyword">if</span> (switch_ivr_originate(<span class="literal">NULL</span>, &amp;caller_session, &amp;cause, aleg, timeout, <span class="literal">NULL</span>, cid_name, cid_num, <span class="literal">NULL</span>, <span class="literal">NULL</span>,</span><br><span class="line">                             SOF_NONE, <span class="literal">NULL</span>, <span class="literal">NULL</span>) != SWITCH_STATUS_SUCCESS ||</span><br><span class="line">        !caller_session) &#123;</span><br><span class="line">        stream-&gt;write_function(stream, <span class="string">&quot;-ERR %s\n&quot;</span>, switch_channel_cause2str(cause));</span><br><span class="line">        <span class="keyword">goto</span> done;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    caller_channel = switch_core_session_get_channel(caller_session);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果参数中包含 &amp; ，表明是命令形式，那么将命令的解析。否则将进行 session 转移</span></span><br><span class="line">    <span class="keyword">if</span> (*exten == <span class="string">&#x27;&amp;&#x27;</span> &amp;&amp; *(exten + <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">switch_caller_extension_t</span> *extension = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">char</span> *app_name = switch_core_session_strdup(caller_session, (exten + <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">char</span> *arg = <span class="literal">NULL</span>, *e;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((e = <span class="built_in">strchr</span>(app_name, <span class="string">&#x27;)&#x27;</span>))) &#123; *e = <span class="string">&#x27;\0&#x27;</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((arg = <span class="built_in">strchr</span>(app_name, <span class="string">&#x27;(&#x27;</span>))) &#123; *arg++ = <span class="string">&#x27;\0&#x27;</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((extension = switch_caller_extension_new(caller_session, app_name, arg)) == <span class="number">0</span>) &#123;</span><br><span class="line">            switch_log_printf(SWITCH_CHANNEL_SESSION_LOG(session), SWITCH_LOG_CRIT, <span class="string">&quot;Memory Error!\n&quot;</span>);</span><br><span class="line">            <span class="built_in">abort</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        switch_caller_extension_add_application(caller_session, extension, app_name, arg);</span><br><span class="line">        switch_channel_set_caller_extension(caller_channel, extension);</span><br><span class="line">        switch_channel_set_state(caller_channel, CS_EXECUTE);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        switch_ivr_session_transfer(caller_session, exten, dp, context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    stream-&gt;write_function(stream, <span class="string">&quot;+OK %s\n&quot;</span>, switch_core_session_get_uuid(caller_session));</span><br><span class="line"></span><br><span class="line">    switch_core_session_rwunlock(caller_session);</span><br><span class="line"></span><br><span class="line">done:</span><br><span class="line">    switch_safe_free(mycmd);</span><br><span class="line">    <span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上诉函数主要做了两件事情，其一：解析命令参数，其二：根据命令参数发起呼叫。</p><ul><li>解析命令参数：参数的赋值这里不做赘述，这里简单描述下各个参数的含义，帮助初学者理解  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">aleg = argv[i++];       <span class="comment">// aleg 就是呼叫 url。例如：sofia/internal/1001@192.168.1.110</span></span><br><span class="line">exten = argv[i++];      <span class="comment">// exten 是 session 转移的参数或者其它命令配置。</span></span><br><span class="line">                        <span class="comment">//      其中 session 转移是修改呼叫方的 caller_number</span></span><br><span class="line">                        <span class="comment">//      至于其它命令可以参考 &amp;hold()</span></span><br><span class="line">dp = argv[i++];         <span class="comment">// 呼叫形式: 对应与 mod_dialplan_xml、mod_dialplan_directory、mod_dialplan_asterisk</span></span><br><span class="line">context = argv[i++];    <span class="comment">// context 一般对应 config/dialplan 中的 default 或 public</span></span><br><span class="line">cid_name = argv[i++];   <span class="comment">// 呼叫方显示到被叫方的名字</span></span><br><span class="line">cid_num = argv[i++];    <span class="comment">// 呼叫方显示到被叫方的号码</span></span><br></pre></td></tr></table></figure></li><li>根据命令参数发发起呼叫：这里的主要执行是 <code>switch_ivr_originate()</code> 函数，通过此函数我们获取到一个通话的 session。<br>下面我将详细讲解此函数中执行内容。</li></ul><h2 id="switch-ivr-originate"><a href="#switch-ivr-originate" class="headerlink" title="switch_ivr_originate"></a><code>switch_ivr_originate</code></h2><p>此函数位于 switch_ivr_originate.c 中，此函数的实现内容为发起呼叫的功能，这其中的代码非常复杂。</p><p>这里分成各个阶段分别分析其中的内容。</p><h3 id="传入参数"><a href="#传入参数" class="headerlink" title="传入参数"></a>传入参数</h3><p>以下是此函数的传入参数的解释，主要位于 switch_ivr.h 中：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment">  \brief Make an outgoing call</span></span><br><span class="line"><span class="comment">  \param session originating session</span></span><br><span class="line"><span class="comment">  \param bleg B leg session</span></span><br><span class="line"><span class="comment">  \param cause a pointer to hold call cause</span></span><br><span class="line"><span class="comment">  \param bridgeto the desired remote callstring</span></span><br><span class="line"><span class="comment">  \param timelimit_sec timeout in seconds for outgoing call</span></span><br><span class="line"><span class="comment">  \param table optional state handler table to install on the channel</span></span><br><span class="line"><span class="comment">  \param cid_name_override override the caller id name</span></span><br><span class="line"><span class="comment">  \param cid_num_override override the caller id number</span></span><br><span class="line"><span class="comment">  \param caller_profile_override override the entire calling caller profile</span></span><br><span class="line"><span class="comment">  \param ovars variables to be set on the outgoing channel</span></span><br><span class="line"><span class="comment">  \param flags flags to pass</span></span><br><span class="line"><span class="comment">  \return SWITCH_STATUS_SUCCESS if bleg is a running session.</span></span><br><span class="line"><span class="comment">  \note bleg will be read locked which must be unlocked with switch_core_session_rwunlock() before losing scope</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment">  \brief 往外发起呼叫</span></span><br><span class="line"><span class="comment">  \param 正在发起会话的会话，可以简单理解为 a-leg，如果没有 a-leg 传入 NULL 即可</span></span><br><span class="line"><span class="comment">  \param 传入接收 b-leg 的 session 指针</span></span><br><span class="line"><span class="comment">  \param 传入接收呼叫结果的指针</span></span><br><span class="line"><span class="comment">  \param 想要呼叫的远端设备的链接</span></span><br><span class="line"><span class="comment">  \param 向外呼叫超时时间</span></span><br><span class="line"><span class="comment">  \param table optional state handler table to install on the channel</span></span><br><span class="line"><span class="comment">  \param 覆盖呼叫者的名字</span></span><br><span class="line"><span class="comment">  \param 覆盖呼叫者的号码</span></span><br><span class="line"><span class="comment">  \param 覆盖呼叫者的整个配置内容</span></span><br><span class="line"><span class="comment">  \param 设置在外呼通道上的变量</span></span><br><span class="line"><span class="comment">  \param flags flags to pass</span></span><br><span class="line"><span class="comment">  \retur 如果 b-leg 建立成功会返回 SWITCH_STATUS_SUCCESS</span></span><br><span class="line"><span class="comment">  \note bleg will be read locked which must be unlocked with switch_core_session_rwunlock() before losing scope</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FreeSWTICH" scheme="http://nikohpng.github.io/categories/FreeSWTICH/"/>
    
    
    <category term="FreeSWITCH源码" scheme="http://nikohpng.github.io/tags/FreeSWITCH%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>FreeSWTICH中自定义命令的添加</title>
    <link href="http://nikohpng.github.io/2022/01/08/freeswitch/FreeSWTICH%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E4%BB%A4%E7%9A%84%E6%B7%BB%E5%8A%A0/"/>
    <id>http://nikohpng.github.io/2022/01/08/freeswitch/FreeSWTICH%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E5%91%BD%E4%BB%A4%E7%9A%84%E6%B7%BB%E5%8A%A0/</id>
    <published>2022-01-08T09:24:57.000Z</published>
    <updated>2022-01-20T12:32:28.658Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文将介绍如何在 FreeSWITCH 中开发自己的命令。<br>本文需要在<a href="./FreeSWTICH%E5%9C%A8vs%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%9D%97">FreeSWTICH在vs中添加一个测试模块</a>作为基础知识。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table><thead><tr><th>环境名</th><th>版本</th></tr></thead><tbody><tr><td>WIN</td><td>WIN10</td></tr><tr><td>FS</td><td>1.10.0</td></tr><tr><td>VS</td><td>vs2017</td></tr></tbody></table><h2 id="FreeSWITCH-模块基础知识"><a href="#FreeSWITCH-模块基础知识" class="headerlink" title="FreeSWITCH 模块基础知识"></a>FreeSWITCH 模块基础知识</h2><p>关于模块的定义、生命周期的开启与结束都在以下所示的定义中：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SWITCH_MODULE_SHUTDOWN_FUNCTION(mod_xx_shutdown);</span><br><span class="line">SWITCH_MODULE_LOAD_FUNCTION(mod_xx_load);</span><br><span class="line">SWITCH_MODULE_RUNTIME_FUNCTION(mod_xx_runtime);</span><br><span class="line"></span><br><span class="line">SWITCH_MODULE_DEFINITION(mod_xx, mod_xx_load, mod_xx_shutdown, mod_xx_runtime);</span><br></pre></td></tr></table></figure><p>此行我们着重关注模块的启动，因为我们将要在里面放置我们需要添加的命令。<br>那我们直接开始上代码把！</p><h2 id="添加一个命令"><a href="#添加一个命令" class="headerlink" title="添加一个命令"></a>添加一个命令</h2><p>在 <code>SWITCH_MODULE_LOAD_FUNCTION</code>中添加指向处理命令的 mod_name_function 并<br>告知控制台接收的命令字符串有 <code>help</code>这个命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SWITCH_MODULE_LOAD_FUNCTION(mod_xx_load)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch_api_interface_t</span> *api_interface;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* connect my internal structure to the blank pointer passed to me */</span></span><br><span class="line">    *module_interface = switch_loadable_module_create_module_interface(pool, modname);</span><br><span class="line"></span><br><span class="line">    SWITCH_ADD_API(api_interface, <span class="string">&quot;mod_name&quot;</span>, <span class="string">&quot;mod description&quot;</span>, mod_name_function, <span class="string">&quot;syntax&quot;</span>);</span><br><span class="line">    switch_console_set_complete(<span class="string">&quot;add mod name help&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* indicate that the module should continue to be loaded */</span></span><br><span class="line">    <span class="keyword">return</span> SWITCH_STATUS_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理命令"><a href="#处理命令" class="headerlink" title="处理命令"></a>处理命令</h2><p>处理命令，如果只输入了<code>mod_name</code>而没有相应的<code>help</code>那么我们直接输出 hello world，代码如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SWITCH_STANDARD_API(srs_function)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> *mycmd = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">switch_status_t</span> status = SWITCH_STATUS_SUCCESS;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (zstr(cmd)) </span><br><span class="line">    &#123; </span><br><span class="line">        stream-&gt;write_function(stream, <span class="string">&quot;%s&quot;</span>, <span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> done;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">done:</span><br><span class="line">    switch_safe_free(mycmd);</span><br><span class="line">    <span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="FreeSWTICH" scheme="http://nikohpng.github.io/categories/FreeSWTICH/"/>
    
    
    <category term="command" scheme="http://nikohpng.github.io/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>WebRTC 在 Win 中源代码编译</title>
    <link href="http://nikohpng.github.io/2022/01/01/webrtc/webrtc%E5%9C%A8win%E4%B8%AD%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    <id>http://nikohpng.github.io/2022/01/01/webrtc/webrtc%E5%9C%A8win%E4%B8%AD%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91/</id>
    <published>2022-01-01T12:30:20.000Z</published>
    <updated>2023-06-03T03:03:06.471Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文主要讲解本人在 win 中编译 WebRTC 的过程中所遇到的问题与思考。</p><h2 id="gclient"><a href="#gclient" class="headerlink" title="gclient"></a>gclient</h2><p>“工欲善其事，必先利其器”。那么我们必须先对这个工具有一定的认知。</p><h3 id="为什么需要-gclient"><a href="#为什么需要-gclient" class="headerlink" title="为什么需要 gclient"></a>为什么需要 gclient</h3><p>gclient 是谷歌开发的一款跨平台 git 仓库管理平台。</p><p>为什么要有这个呢？因为像这种大项目，被拆分成很多个子项目，子项目分别进行研发，这样的好处就是能够复用大量代码，方便多人开发（每个团队只负责一个项目），每个子项目都有版本规划。</p><p>那么集成代码的时候怎么办呢？难道要开发人员记得每个项目的版本号吗？比如：我们需要 webrtc M87，里面分成很多子项目，每个子项目都有对应的版本号，如果版本号错了可能存在接口兼容问题。</p><p>通过上诉问题，我们就知道 gclient 的作用了。本质就是方便集成所有的仓库的内容</p><h3 id="gclient是如何运行"><a href="#gclient是如何运行" class="headerlink" title="gclient是如何运行"></a>gclient是如何运行</h3><p>gclient 将多个仓库组成一个 solution（解决方案）进行管理。这个解决方案用 .gclient 文件进行描述，其中描述了需要拉取那个解决方案，可以通过<code>gclient conf</code>创建文件。例如：我们要拉取 webrtc 这个解决方案，就在里面配置 webrtc 的链接。如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 注意：此仅为示例内容，不具有实际价值</span><br><span class="line">solutions &#x3D; [</span><br><span class="line">  &#123; &quot;name&quot;        : &#39;src&#39;,</span><br><span class="line">    &quot;url&quot;         : &#39;https:&#x2F;&#x2F;chromium.googlesource.com&#x2F;external&#x2F;webrtc.git@gitlab&#39;,</span><br><span class="line">    &quot;deps_file&quot;   : &#39;DEPS&#39;,</span><br><span class="line">    &quot;managed&quot;     : True,</span><br><span class="line">    &quot;custom_deps&quot; : &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;custom_vars&quot;: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>那么项目之间的依赖关系用什么描述呢？这个内容就用 DEPS 这个特殊文件进行描述。</p><h3 id="gclient使用问题"><a href="#gclient使用问题" class="headerlink" title="gclient使用问题"></a>gclient使用问题</h3><p>在使用 gclient 进行拉取项目前，我们需要运行 <code>gclient</code> 命令，这个命令会自动为我们下载 git、python 的环境。由于下载地方在国外，所以需要开着代理进行下载。但是 gclient 下载仍然会出错，下面就是我的出错内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 以自己的环境为主</span><br><span class="line">set vs2017_install&#x3D;D:\Program Files (x86)\Microsoft Visual Studio\2017\Community</span><br><span class="line">set GYP_MSVS_OVERRIDE_PATH&#x3D;D:\Program Files (x86)\Microsoft Visual Studio\2017\Community </span><br><span class="line">set GYP_GENERATORS&#x3D;msvs-ninja,ninja</span><br><span class="line"># 告诉depot_tools使用我们本机的VS进行编译</span><br><span class="line">set DEPOT_TOOLS_WIN_TOOLCHAIN&#x3D;0</span><br><span class="line"></span><br><span class="line">gclient </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于 gclient 的详细使用方法请查看引用中的<a href="https://www.cnblogs.com/baitongtong/p/9561753.html">WebRTC client 源码环境工具配置</a></p><blockquote><p>注意：此处还在配置 gclient 。</p></blockquote><h4 id="代理设置"><a href="#代理设置" class="headerlink" title="代理设置"></a>代理设置</h4><p>本人在 win 中使用的是 <a href="https://github.com/2dust/v2rayN/releases">v2rayN</a> 软件，本人使用时打开了<strong>http代理和PAC全局模式修改</strong>，再去 cmd 中配置代理地址，指向了http代理。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 以你本地代理为准</span><br><span class="line">set http_proxy=127.0.0.1:10809</span><br><span class="line">set https_proxy=127.0.0.1:10809</span><br></pre></td></tr></table></figure><blockquote><p>注意：我这里很奇怪，如果不打开全局模式就算设置了代理也没法使用</p></blockquote><h4 id="cipd-client-exe-下载失败"><a href="#cipd-client-exe-下载失败" class="headerlink" title="cipd_client.exe 下载失败"></a>cipd_client.exe 下载失败</h4><p>开着代理下载 cipd 任然失败，我在此处卡了很久。根据网上所说直接将文件用浏览器下载，然后改名成 .cipd_client.exe 重新使用 gclient 就执行成功。</p><h4 id="runhooks-失败"><a href="#runhooks-失败" class="headerlink" title="runhooks 失败"></a>runhooks 失败</h4><p>失败信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NOTICE:You have PROXY values set in your environment,......BOTO_CONFIG......NO_AUTH_BOTO_CONFIG environment var.</span><br></pre></td></tr></table></figure><p>解决方法：新建一个文件，http_proxy.boto ，放在任意位置，我放到了 D:\depot_tools 中，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Boto]</span><br><span class="line">proxy&#x3D;127.0.0.1</span><br><span class="line">proxy_port &#x3D; 1080</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="源代码同步"><a href="#源代码同步" class="headerlink" title="源代码同步"></a>源代码同步</h2><p>我是直接使用以下命令就可以获取到源代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mkdir webrtc-checkout</span><br><span class="line">cd webrtc-checkout</span><br><span class="line">fetch --nohooks webrtc</span><br><span class="line">gclient sync</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="同步过程中遇到的问题"><a href="#同步过程中遇到的问题" class="headerlink" title="同步过程中遇到的问题"></a>同步过程中遇到的问题</h3><p>同步过程中本质还是要保证与远端外网的网络保持正常连接，我在保证网络连接正常的情况下也就一次性过了。</p><h4 id="clang下载失败问题"><a href="#clang下载失败问题" class="headerlink" title="clang下载失败问题"></a>clang下载失败问题</h4><p>我这边下载失败有两个问题。</p><p>其一：WebRTC 中的代码有问题，在 src/DEPS 中所有<code>download_from_google_storage</code>应该改为<code>src/third_party/depot_tools/download_from_google_storage.py</code>，因为我们没有将这个 py 文件设置为环境变量，那么我们就必须写全路径，这个怀疑是 webrtc 在不同开发人员中做了不同操作导致的</p><p>其二：就是真正的无法下载 clang 问题。这里我参考了<a href="https://blog.csdn.net/malihong1/article/details/73500806">webrtc gclient sync运行后clang下载失败的解决办法！</a>的思路解决了问题。这里推荐使用 switchhost 这款软件，帮助我们更好的修改域名。</p><p>其三：这个不是问题。只是简单说下这个下载过程需要保证两个域名的正常访问。经过我的测试，这两个少一个都不行，但是上面的文章没有具体说出来。如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 写于2021&#x2F;7&#x2F;10,以你的访问为准</span><br><span class="line">142.250.206.208 commondatastorage.googleapis.com</span><br><span class="line">183.236.60.194 android.googlesource.com</span><br></pre></td></tr></table></figure><p>最后，这里说个小技巧。通过将 <code>https://commondatastorage.googleapis.com/chromium-browser-clang</code> 连接放到浏览器中访问，然后打开 F11 ，找到 network 并选择连接，查看 http 响应头中的 remote-ip 。这个技巧可以帮你更好的获取到可以访问的ip</p><blockquote><p>注意：在这个过程中，必须一直保持代理打开着并保持连接</p></blockquote><blockquote><p>Error: failed to parse desired state (line 2): unknown $setting: “$OverrideInstallMode”.</p></blockquote><p>解决方案：将 <code> ./src/third_party/depot_tools/gclient_scm.py</code> 文件中的 <code>$OverrideInstallMode</code> 注释掉，就不会出现问题。具体原因暂时不明！</p><h2 id="生成-vs-的解决方案"><a href="#生成-vs-的解决方案" class="headerlink" title="生成 vs 的解决方案"></a>生成 vs 的解决方案</h2><p>生成解决方案的时候，采用如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd src</span><br><span class="line">gn gen --ide&#x3D;vs2017 out&#x2F;Default</span><br></pre></td></tr></table></figure><h3 id="生成解决方案遇到的问题"><a href="#生成解决方案遇到的问题" class="headerlink" title="生成解决方案遇到的问题"></a>生成解决方案遇到的问题</h3><h4 id="没有gn命令"><a href="#没有gn命令" class="headerlink" title="没有gn命令"></a>没有gn命令</h4><p>很真实！我这个 cmd 环境中没有设置 gn 的环境变量，那么我就直接使用全路径。主要是不容易出错。路径如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\workspace\webrtc\source\src\buildtools\win\gn.exe</span><br></pre></td></tr></table></figure><h4 id="遇到-WINDOWSSDKDIR-问题"><a href="#遇到-WINDOWSSDKDIR-问题" class="headerlink" title="遇到 WINDOWSSDKDIR 问题"></a>遇到 WINDOWSSDKDIR 问题</h4><p>这个问题的本质就是我没将 sdk 安装到 C 盘中，因而出现无法找到路径。<a href="https://blog.csdn.net/qq_40340448/article/details/115380257">webrtc 编译报错 WINDOWSSDKDIR KeyError: ‘WINDOWSSDKDIR‘</a>这篇文章描述很详细了，就是将你安装在其它盘中的 sdk 的文件拷贝到 <code>C:\Program Files (x86)\Windows Kits\</code>中</p><p>这里我补充两点，因为这是我生成过程中遇到的问题。</p><p>第一：一般不好找到你的 sdk 文件在哪里，可以采用 everything 这个软件搜索 Windows Kits 。当然如果你能自己找到最好！</p><p>第二：需要额外再复制拷贝一个 Debuggers 和 Redist 内容到 C 盘下面。</p><h4 id="SDK-版本太低"><a href="#SDK-版本太低" class="headerlink" title="SDK 版本太低"></a>SDK 版本太低</h4><p>这个问题是 vs2017 默认使用 10.0.17763.0，但是 WebRTC 要求 10.0.19041 或者更高版本的 Windows 10 SDK。文档描述在 <a href="https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md">win 编译 WebRTC 环境要求</a>一文中。</p><p>可以下载 SDK 安装的软件，安装我们需要的版本 <code>https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/</code></p><blockquote><p>注意：将你新下载的内容拷贝到 C 盘中哦！</p></blockquote><h3 id="编译失败"><a href="#编译失败" class="headerlink" title="编译失败"></a>编译失败</h3><blockquote><p>编译时可能会出现 clang 的相关错误，原因是 src\third_party\llvm-build 此文件没有。</p></blockquote><p>解决方案：直接前往内网 svn 获取 <a href="svn://10.10.0.1/svnrepos/联通/WebRTC/Dependency/M92/Win/llvm-build.zip">llvm-build</a>即可。</p><blockquote><p>编译代码时可能出现缺少 LASTCHANGE 和 LASTCHANGE.committime 文件</p></blockquote><p>解决方案：直接前往内网 svn 获取 <a href="svn://10.10.0.1/svnrepos/%E8%81%94%E9%80%9A/WebRTC/Dependency/M92/Win">LASTCHANGE 和 LASTCHANGE.committime</a>即可。</p><blockquote><p>编译 webrtc.lib 出现没有 cursor_unittest_resources.res 文件。只有 webrtc.lib 才会出现，libwebrtc.lib 不会出现，可忽略</p></blockquote><p>出现此问题目前猜测是资源文件没有下载完全导致的，我此次搭建的项目是从同事那里拷贝过来的，可能下载出现了一些问题。具体原因没去仔细研究。</p><p>此次项目主要用于编译 Lib 库文件用于开发，不需要生成测试用例，因而解决方式如下，重新生成没有测试用例的解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gn gen --ide&#x3D;vs out&#x2F;Default --args&#x3D;&quot;rtc_include_tests&#x3D;false rtc_build_examples&#x3D;false&quot;</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://blog.jianchihu.net/webrtc-build-vs2017.html">Windows 平台WebRTC编译-VS2017</a></p><p><a href="https://blog.csdn.net/aaronjny/article/details/79828939">关于 debug 安装</a></p><p><a href="https://www.shangmayuan.com/a/7743c98044a240df8654f5d5.html">windows 平台下载并编译 webrtc 代码（代理）</a></p><p><a href="https://www.cnblogs.com/baitongtong/p/9561753.html">WebRTC client 源码环境工具配置</a></p><p><a href="https://blog.csdn.net/ununie/article/details/90022020">PAC 模式和全局代理模式的区别与对比</a></p><p><a href="https://blog.csdn.net/qq_40340448/article/details/115380257">WebRTC 编译报错 WINDOWSSDKDIR KeyError: ‘WINDOWSSDKDIR‘</a></p><p><a href="https://blog.csdn.net/malihong1/article/details/73500806">webrtc gclient sync运行后clang下载失败的解决办法！</a></p><p><a href="https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md">win 编译 WebRTC 环境要求</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WebRTC" scheme="http://nikohpng.github.io/categories/WebRTC/"/>
    
    
    <category term="WebRTC编译" scheme="http://nikohpng.github.io/tags/WebRTC%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
</feed>
